/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Forwarder,
  ForwarderInterface,
} from "../../../../../@opengsn/contracts/src/forwarder/Forwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "domainSeparator",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "domainValue",
        type: "bytes",
      },
    ],
    name: "DomainRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "typeHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "typeStr",
        type: "string",
      },
    ],
    name: "RequestTypeRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN_TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERIC_PARAMS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "validUntilTime",
            type: "uint256",
          },
        ],
        internalType: "struct IForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestTypeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "suffixData",
        type: "bytes",
      },
    ],
    name: "_getEncoded",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "validUntilTime",
            type: "uint256",
          },
        ],
        internalType: "struct IForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "domainSeparator",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "requestTypeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "suffixData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "ret",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "registerDomainSeparator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "typeName",
        type: "string",
      },
      {
        internalType: "string",
        name: "typeSuffix",
        type: "string",
      },
    ],
    name: "registerRequestType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "typeHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "validUntilTime",
            type: "uint256",
          },
        ],
        internalType: "struct IForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "domainSeparator",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "requestTypeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "suffixData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346101895760a08101906001600160401b0390818311818410176101735760409283526061815260208101917f616464726573732066726f6d2c6164647265737320746f2c75696e743235362083527f76616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c848301527f627974657320646174612c75696e743235362076616c6964556e74696c54696d6060830152606560f81b6080830152604f845180946100d560208301956e08cdee4eec2e4c8a4cae2eacae6e85608b1b8752518092602f85019061018e565b8101602960f81b602f82015203601081018552601f1991829101168401918483109083111761017357818591601f7f64d6bce64323458c44643c51fe45113efc882082f7b7fd5f09f0d69d2eedb2029583855261015e885182209889600052600060205286600020600160ff19825416179055602086525180928160208801528787019061018e565b01168101030190a251610fcf90816101b28239f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b60005b8381106101a15750506000910152565b818101518382015260200161019156fe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600090813560e01c90816301ffc9a7146107ca57508063066a310c146107ac57806321fe98df146107805780632d0335ab146107465780639c7b459214610658578063ad9f99c714610609578063c3f28abd146105eb578063c722f177146105ba578063d9210be51461046c578063e024dc7f146101205763e2b62f2d0361001257346101195760031960603682011261011c578335916001600160401b039182841161011c5760e090843603011261011957604435918211610119575092610102916100f56101159536908401610972565b9290916024359101610d48565b905191829160208352602083019061094d565b0390f35b80fd5b5080fd5b509161013e9161012f366109ee565b94869996949194939293610bb6565b6001600160a01b03938461015185610b04565b1681526020946002865261017a83832080549061016d82610b5a565b9055608087013514610b18565b60c08501358015908115610462575b50156104285781948381013595861515968761041e575b603490896101f46101b460a0870187610ad2565b6101c088969296610b04565b8b5194828693828501998a378301916bffffffffffffffffffffffff199060601b169082015203601481018452018261084f565b5a603f810290808204603f149015171561040b576060860135948501908186116103f85760061c106103bd579186939184936102318d8801610b04565b905193f1953d156103b5573d9561024787610870565b966102548751988961084f565b87523d858a89013e5b855190868201908282106001600160401b038311176103a257508591829188528a81528a81017f6578656375746520726573756c743a20737563636573733a202573207265743a90528a82808a51809381019463c3b5563560e01b86528c6024830152606482016102cd9161094d565b9d15159d8e60448301520392601f199384810182526102ec908261084f565b516a636f6e736f6c652e6c6f6794855afa5088516305f3bfab60e11b8d8201908152602482018e90529181610324604482018e61094d565b039081018252610334908261084f565b51915afa5080610399575b61035f575b5050509081806101159351958695865285015283019061094d565b8280809361036d8294610b04565b164790828215610390575bf115610385578080610344565b9051903d90823e3d90fd5b506108fc610378565b5047151561033f565b634e487b7160e01b875260419052602486fd5b60609561025d565b875162461bcd60e51b8152808a018c905260156024820152744657443a20696e73756666696369656e742067617360581b6044820152606490fd5b634e487b7160e01b895260118b52602489fd5b634e487b7160e01b885260118a52602488fd5b619c4091506101a0565b825162461bcd60e51b815280850187905260146024820152731195d10e881c995c5d595cdd08195e1c1a5c995960621b6044820152606490fd5b9050421038610189565b50903461011c5761047c366109a4565b9295855b83811061053f5750507f64d6bce64323458c44643c51fe45113efc882082f7b7fd5f09f0d69d2eedb202939495610511602261053993866104bf61088b565b918a51988993602099808b8701998a378501600560fb1b8b8201526104ed825180938d60218501910161092a565b0191600b60fa1b602184015285830137018a8382015203600281018752018561084f565b83519020808752868352858720805460ff19166001179055945182815292839283019061094d565b0390a280f35b6001600160f81b03198189013516600560fb1b81141590816105ab575b50156105705761056b90610b5a565b610480565b855162461bcd60e51b815260208184015260156024820152744657443a20696e76616c696420747970656e616d6560581b6044820152606490fd5b602960f81b141590503861055c565b5091346105e75760203660031901126105e7578160209360ff923581526001855220541690519015158152f35b8280fd5b50903461011c578160031936011261011c5761011590610102610a58565b50903461011c5761065061065591610620366109ee565b9790969195929492916001600160a01b0361063a84610b04565b168b5260026020528a2054608083013514610b18565b610bb6565b80f35b50903461011c5761069961066b366109a4565b9291939061068b61067a610a58565b938451602080960120963691610b7f565b838151910120933691610b7f565b8181519101208451928284019485528584015260608301524660808301523060a083015260a0825260c08201928284106001600160401b038511176107335784959650837f4bc68689cbe89a4a6333a3ab0a70093874da3e5bfb71e93102027f3f073687d895528251902094858752600182528620600160ff19825416179055825260bf199061072c60e082018261094d565b030190a280f35b634e487b7160e01b865260418752602486fd5b5091346105e75760203660031901126105e757356001600160a01b038116908190036105e757828291602094526002845220549051908152f35b5091346105e75760203660031901126105e7578160209360ff9235815280855220541690519015158152f35b50903461011c578160031936011261011c576101159061010261088b565b905083346105e75760203660031901126105e7573563ffffffff60e01b81168091036105e757602092506309788f9960e21b811490811561080d575b5015158152f35b6301ffc9a760e01b14905083610806565b608081019081106001600160401b0382111761083957604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b0382111761083957604052565b6001600160401b03811161083957601f01601f191660200190565b6040519060a082018281106001600160401b038211176108395760405260618252606560f81b6080837f616464726573732066726f6d2c6164647265737320746f2c75696e743235362060208201527f76616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c60408201527f627974657320646174612c75696e743235362076616c6964556e74696c54696d60608201520152565b60005b83811061093d5750506000910152565b818101518382015260200161092d565b906020916109668151809281855285808601910161092a565b601f01601f1916010190565b9181601f8401121561099f578235916001600160401b03831161099f576020838186019501011161099f57565b600080fd5b604060031982011261099f576001600160401b039160043583811161099f57826109d091600401610972565b9390939260243591821161099f576109ea91600401610972565b9091565b6003199160a08284011261099f576004356001600160401b039384821161099f5760e090828503011261099f5760040192602435926044359260643583811161099f5782610a3e91600401610972565b9390939260843591821161099f576109ea91600401610972565b60405190610a658261081e565b6052825271766572696679696e67436f6e74726163742960701b6060837f454950373132446f6d61696e28737472696e67206e616d652c737472696e672060208201527f76657273696f6e2c75696e7432353620636861696e49642c616464726573732060408201520152565b903590601e198136030182121561099f57018035906001600160401b03821161099f5760200191813603831361099f57565b356001600160a01b038116810361099f5790565b15610b1f57565b60405162461bcd60e51b815260206004820152601360248201527208cae887440dcdedcc6ca40dad2e6dac2e8c6d606b1b6044820152606490fd5b6000198114610b695760010190565b634e487b7160e01b600052601160045260246000fd5b929192610b8b82610870565b91610b99604051938461084f565b82948184528183011161099f578281602093846000960137010152565b929593949194816000526020966001885260409660ff88600020541615610d0457806000526000895260ff88600020541615610cc05790610bf8929186610d48565b8681519101208551908782019261190160f01b84526022830152604282015260428152610c248161081e565b519020903215938415610c7c575b5050505015610c3f575050565b60649250519062461bcd60e51b82526004820152601760248201527608cae887440e6d2cedcc2e8eae4ca40dad2e6dac2e8c6d604b1b6044820152fd5b610ca3945091610c95610c9b92610cb395943691610b7f565b90610f09565b939093610df4565b6001600160a01b03918291610b04565b1691161438808080610c32565b875162461bcd60e51b8152600481018a9052601a60248201527f4657443a20756e726567697374657265642074797065686173680000000000006044820152606490fd5b875162461bcd60e51b8152600481018a9052601d60248201527f4657443a20756e7265676973746572656420646f6d61696e207365702e0000006044820152606490fd5b6001600160a01b0393610df193929085610d6184610b04565b1695610d6f60208501610b04565b16610d87610d8060a0860186610ad2565b3691610b7f565b602081519101209060405197889460208601526040850152606084015260408401356080840152606084013560a0840152608084013560c084015260e083015260c0610100930135838301528061012094858401378101600084820152039081018452018261084f565b90565b6005811015610ef35780610e055750565b60018103610e4d5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b60028103610e9a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314610ea357565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b906041815114600014610f33576109ea916020820151906060604084015193015160001a90610f3d565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311610fb65791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15610fa95781516001600160a01b03811615610fa3579190565b50600190565b50604051903d90823e3d90fd5b5050505060009060039056fea164736f6c6343000813000a";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Forwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Forwarder__factory {
    return super.connect(runner) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new Interface(_abi) as ForwarderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Forwarder {
    return new Contract(address, _abi, runner) as unknown as Forwarder;
  }
}
