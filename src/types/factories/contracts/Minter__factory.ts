/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsDistributor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFund",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRate",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPendingTeam",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTeam",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDonation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newTeam",
        type: "address",
      },
    ],
    name: "AcceptTeam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "VeRateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "WeeklyChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "changeVeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weekly",
        type: "uint256",
      },
    ],
    name: "changeWeekly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingTeam",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistributor",
    outputs: [
      {
        internalType: "contract IRewardsDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_team",
        type: "address",
      },
    ],
    name: "setTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "team",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "veRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_recipcient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e03461010657601f6108cb38819003918201601f19168301916001600160401b0383118484101761010b578084926060946040528339810103126101065761004781610121565b61005f604061005860208501610121565b9301610121565b6103e860005569152d02c7e14af68000006001556001600160a01b0391821660805291811660a052600480546001600160a01b031916331790551660c05262093a80428190048082029181159183041417156100f057600255604051610795908161013682396080518181816103d801526105f9015260a051816106a0015260c051818181610377015261063d0152f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101065756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263095cf5c6146106e3575081630a441f7b146106c45781631f8507161461068057816326cfc17b146106615781633f2a55401461061d57816346c96aac146105d957816359d46ffc146105b15781636a11038314610557578163829965cc1461053857816385f2aef21461050e578163a83627de146102e5578163ada6565e146102c8578163b5cc143a14610243578163ed88c68e146101f4578163f01aea0314610176578163f3fef3a314610100575063f4359ce5146100e057600080fd5b346100fc57816003193601126100fc576020905162093a808152f35b5080fd5b90503461017257816003193601126101725780356001600160a01b039182821680920361016e576024359281541633036101605750838080938193828215610157575bf11561014d575080f35b51903d90823e3d90fd5b506108fc610143565b8351633a7cfa5d60e21b8152fd5b8480fd5b8280fd5b91905034610172576020366003190112610172578135916001600160a01b0381541633036101e65761138883116101d85750816020917f1b3e838a14abc73095667e9ce064209c4643de8849f0efbf7f4ea8f8a7103f3993855551908152a180f35b9051636a43f8d160e01b8152fd5b9051633a7cfa5d60e21b8152fd5b9050826003193601126101725734156102355750513481527f5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e60203392a280f35b9051636370392160e11b8152fd5b905034610172578260031936011261017257600554906001600160a01b038216928333036102bb5750805473ffffffffffffffffffffffffffffffffffffffff19808216851790925591166005558216177fe25466fe8250322bee73bc230e10775fe0da57be723ebdabfdc8b62b4ba0d10c8280a280f35b5163071110c760e51b8152fd5b5050346100fc57816003193601126100fc57602091549051908152f35b919050346101725782600319360112610172576002549162093a80908184018085116104c75742101561031d575b6020848451908152f35b90925060035460001981146104fb576001016003558242048381029381850414901517156104e85782600255600154908147106104da5784548083029083820414831517156104c75761271090046001600160a01b0386817f0000000000000000000000000000000000000000000000000000000000000000168184828282156104be575b839283928392f1156104b257803b156100fc57819085885180948193635f72ee1960e11b83525af180156104a857610495575b507f0000000000000000000000000000000000000000000000000000000000000000169083039183831161048257908691813b1561017257855180948193630314777960e21b83525af1801561047857610460575b506020935081519081527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885843392a23880610313565b61046a859161075e565b610474578361042a565b8380fd5b83513d87823e3d90fd5b634e487b7160e01b875260119052602486fd5b6104a19097919761075e565b95386103d5565b86513d8a823e3d90fd5b508551903d90823e3d90fd5b506108fc6103a2565b634e487b7160e01b865260118252602486fd5b8251636a259e3160e11b8152fd5b634e487b7160e01b845260119052602483fd5b634e487b7160e01b855260118252602485fd5b828434610535578060031936011261053557506001600160a01b0360209254169051908152f35b80fd5b5050346100fc57816003193601126100fc576020906003549051908152f35b91905034610172576020366003190112610172578135916001600160a01b0381541633036101e65750816020917f6b7d0eeb50ab9007d612c3d47bc900447594cde214923c1b9d0f2b1fc960ca719360015551908152a180f35b5050346100fc57816003193601126100fc576020906001600160a01b03600554169051908152f35b5050346100fc57816003193601126100fc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346100fc57816003193601126100fc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346100fc57816003193601126100fc576020906001549051908152f35b5050346100fc57816003193601126100fc57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346100fc57816003193601126100fc576020906002549051908152f35b84918434610474576020366003190112610474578135926001600160a01b0380851680950361075a57835416330361074c5750821561073f57505073ffffffffffffffffffffffffffffffffffffffff19600554161760055580f35b5163d92e233d60e01b8152fd5b633a7cfa5d60e21b81529050fd5b8580fd5b67ffffffffffffffff811161077257604052565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000813000a";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _voter: AddressLike,
    _ve: AddressLike,
    _rewardsDistributor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _voter,
      _ve,
      _rewardsDistributor,
      overrides || {}
    );
  }
  override deploy(
    _voter: AddressLike,
    _ve: AddressLike,
    _rewardsDistributor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _voter,
      _ve,
      _rewardsDistributor,
      overrides || {}
    ) as Promise<
      Minter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Minter__factory {
    return super.connect(runner) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new Interface(_abi) as MinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Minter {
    return new Contract(address, _abi, runner) as unknown as Minter;
  }
}
