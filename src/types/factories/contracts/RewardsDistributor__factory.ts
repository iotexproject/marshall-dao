/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RewardsDistributor,
  RewardsDistributorInterface,
} from "../../contracts/RewardsDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotVault",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "setStrategyManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461007f57601f6106c438819003918201601f19168301916001600160401b038311848410176100845780849260209460405283398101031261007f57516001600160a01b0381169081900361007f57600160005560018060a01b0319338160025416176002556001541617600155604051610629908161009b8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c91826339b70e38146104b8575081635c966646146104575781636817031b146103ed5781636f4a2cd01461034c578163a8031a1d1461009f575063fbfa77cf146100745780610012565b3461009b578160031936011261009b5760025490516001600160a01b039091168152602090f35b5080fd5b9050346103485781600319360112610348576100b96104dd565b916024918235906002865414610306576002808755546001600160a01b039590861633036102f75782156102e857851691856001541695845196602097888101916323b872dd60e01b8352338983015260448201528360648201526064815260a081019167ffffffffffffffff91808410838511176102d65760e08101848110848211176102c45789528a84527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152518b91829190828a5af13d156102b6573d9182116102a457906101af92918851916101a08c601f19601f84011601846104f8565b82523d8c8c84013e5b87610548565b80519088821592831561028c575b5050501561023757918760449288959460015416908751988996879563a8031a1d60e01b87528601528401525af190811561022e5750610200575b826001815580f35b8161021f92903d10610227575b61021781836104f8565b810190610530565b5038806101f8565b503d61020d565b513d85823e3d90fd5b845162461bcd60e51b8152808401889052602a818801527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b61029c9350820181019101610530565b3888816101bd565b634e487b7160e01b8b5260418652888bfd5b6101af9291506060906101a9565b634e487b7160e01b8d52604188528a8dfd5b634e487b7160e01b8c5260418752898cfd5b508251631f2a200560e01b8152fd5b5082516362df054560e01b8152fd5b606490601f85602086519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8280fd5b91905082600319360112610348576002546001600160a01b0390811633036103df5734156103d15760016044602092825416948451958693849263a8031a1d60e01b845283015234602483015234905af19081156103c857506103ad575080f35b6103c49060203d81116102275761021781836104f8565b5080f35b513d84823e3d90fd5b5051631f2a200560e01b8152fd5b50516362df054560e01b8152fd5b905034610348576020366003190112610348576104086104dd565b60025491906001600160a01b03908184163303610447571692831561043a5750506001600160a01b0319161760025580f35b5163d92e233d60e01b8152fd5b84516362df054560e01b81528390fd5b905034610348576020366003190112610348576104726104dd565b6002546001600160a01b039190821633036104a8571691821561043a575050600180546001600160a01b03191691909117905580f35b83516362df054560e01b81528390fd5b84903461009b578160031936011261009b576001546001600160a01b03168152602090f35b600435906001600160a01b03821682036104f357565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761051a57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126104f3575180151581036104f35790565b919290156105aa575081511561055c575090565b3b156105655790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156105bd5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610603575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506105e056fea164736f6c6343000813000a";

type RewardsDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsDistributor__factory extends ContractFactory {
  constructor(...args: RewardsDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(manager, overrides || {});
  }
  override deploy(
    manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(manager, overrides || {}) as Promise<
      RewardsDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardsDistributor__factory {
    return super.connect(runner) as RewardsDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsDistributorInterface {
    return new Interface(_abi) as RewardsDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardsDistributor {
    return new Contract(address, _abi, runner) as unknown as RewardsDistributor;
  }
}
