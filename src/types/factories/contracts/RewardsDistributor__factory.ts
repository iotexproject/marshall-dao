/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RewardsDistributor,
  RewardsDistributorInterface,
} from "../../contracts/RewardsDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotManagedOrNormalNFT",
    type: "error",
  },
  {
    inputs: [],
    name: "NotVault",
    type: "error",
  },
  {
    inputs: [],
    name: "UpdatePeriod",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "CheckpointToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochEnd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimMany",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTokenTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timeCursorOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenLastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensPerWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0346100f657601f61151e38819003918201601f19168301916001600160401b038311848410176100fb578084926020946040528339810103126100f657516001600160a01b038116908190036100f657600160005562093a808042048181029181830414901517156100e057600181905560035560805266038d7ea4c6800480546001600160a01b0319163317905560405161140c90816101128239608051818181610565015281816105c301528181610641015281816106e501528181610746015281816107f001528181610add01528181610d880152610eac0152f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c9081631f85071614610d7457508063379607f514610a2c5780634607bf6014610a025780636817031b146109b257806378e9792514610994578063899519be146109615780638ec8468a1461093d578063925489a8146103e7578063939ea66b146103c9578063bee5dc321461015c578063d1d58b2514610104578063f4359ce5146100e65763fbfa77cf0361000f57346100e357806003193601126100e35766038d7ea4c68004546040516001600160a01b039091168152602090f35b80fd5b50346100e357806003193601126100e357602060405162093a808152f35b50346100e35760203660031901126100e35762093a8090816003540482810292818404149015171561014857602061013e83600435610e83565b5050604051908152f35b634e487b7160e01b81526011600452602490fd5b50346100e357806003193601126100e35766038d7ea4c68004546001600160a01b031633036103b7574766038d7ea4c680059061019a825482610db7565b91556003546101a98142610db7565b904260035562093a8091828204838102908082048514901517156103a3579285905b601482106101f6575b866000805160206113e08339815191526040888151904282526020820152a180f35b8085019081861161038f578142106000146102de575050508015806102d5575b1561026d57505066038d7ea4c68000811015610259576000805160206113e08339815191529160409160040161024d828254610e1c565b90555b913880806101d4565b634e487b7160e01b83526032600452602483fd5b61028361027d6102889342610db7565b85610dfa565b610dda565b9066038d7ea4c680008110156102c157916040916102ba6000805160206113e083398151915294600401918254610e1c565b9055610250565b634e487b7160e01b84526032600452602484fd5b50814214610216565b9194909383801580610386575b1561033657505066038d7ea4c680008110156103225760040161030f868254610e1c565b90555b61031c8394610e0d565b906101cb565b634e487b7160e01b87526032600452602487fd5b61028361034661034c9388610db7565b89610dfa565b9066038d7ea4c680008110156103725761036b90600401918254610e1c565b9055610312565b634e487b7160e01b88526032600452602488fd5b508186146102eb565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b86526011600452602486fd5b6040516362df054560e01b8152600490fd5b50346100e357806003193601126100e3576020600354604051908152f35b50346100e35760203660031901126100e35767ffffffffffffffff8060043511610939573660236004350112156109395760043560040135116100e3573660246004356004013560051b6004350101116100e357600490610446611330565b66038d7ea4c6800454604051630a441f7b60e01b81529260209184919082906001600160a01b03165afa91821561092c5781926108f8575b5062093a809182420490838202918083048514901517156108e457106108d25781600354049182818102048114831517156108be578190825b6004356004013581106104f9575b505060019250806104de575b5055602060405160018152f35b6104f166038d7ea4c68005918254610db7565b9055386104d1565b60248160051b600435010135156108b95761052182860260248360051b600435010135611386565b80610536575b5061053190610e0d565b6104b7565b9092604051635a2d1e0760e11b815260248560051b600435010135600482015260608160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106d857869161088a575b5060405163bb941cff60e01b815260248660051b600435010135600482015260208160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561086057879161086b575b506001600160a01b031615801591906107c1575b811561079d575b50156106e3576040516331a9108f60e11b815260248560051b600435010135600482015260208160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106d8579161069d878080808861053199976106a29983916106a9575b506001600160a01b03165af16106976112a9565b506112e9565b610e1c565b9290610527565b6106cb915060203d6020116106d1575b6106c38183610e53565b81019061128a565b38610683565b503d6106b9565b6040513d88823e3d90fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156107995760405163076426ed60e11b815260248560051b600435010135600482015282602482015285816044818660018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156106d857908691610785575b5050610531916106a291610e1c565b61078e90610e29565b610799578438610776565b8480fd5b60208101514210159150816107b4575b503861060e565b60409150015115386107ad565b9050604051639cf1969b60e01b815260248660051b600435010135600482015260208160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610860578791610829575b50151590610607565b90506020813d602011610858575b8161084460209383610e53565b81010312610853575138610820565b600080fd5b3d9150610837565b6040513d89823e3d90fd5b610884915060203d6020116106d1576106c38183610e53565b386105f3565b6108ac915060603d6060116108b2575b6108a48183610e53565b810190611236565b38610595565b503d61089a565b6104c5565b634e487b7160e01b82526011600452602482fd5b60405163465a1c3560e01b8152600490fd5b634e487b7160e01b83526011600452602483fd5b9091506020813d602011610924575b8161091460209383610e53565b810103126108535751903861047e565b3d9150610907565b50604051903d90823e3d90fd5b5080fd5b50346100e357806003193601126100e357602066038d7ea4c6800554604051908152f35b50346100e35760203660031901126100e35760043566038d7ea4c680008110156109395760209060040154604051908152f35b50346100e357806003193601126100e3576020600154604051908152f35b50346100e35760203660031901126100e3576001600160a01b03600435818116908190036109fe5766038d7ea4c6800491825490811633036103b7576001600160a01b03191617905580f35b8280fd5b50346100e35760203660031901126100e35760406020916004358152600283522054604051908152f35b50346100e357602090816003193601126100e35760043590610a4c611330565b66038d7ea4c6800454604051630a441f7b60e01b81526001600160a01b039185908290600490829086165afa908115610bed578391610d47575b5062093a80908142049082820291808304841490151715610d3357106108d25780600354048181029181830414901517156108e457610ac59084611386565b9283610ada575b505060019055604051908152f35b817f00000000000000000000000000000000000000000000000000000000000000001690604051635a2d1e0760e11b8152816004820152606081602481865afa908115610d28578591610d0a575b5060405163bb941cff60e01b8152600481018390528781602481875afa9081156106d8578893929186918891610ced575b50161590811591610c7b575b8115610c58575b5015610bf8576024604051809481936331a9108f60e11b835260048301525afa908115610bed5792808080878196610bb4966001998491610bd0575b50165af16106976112a9565b66038d7ea4c68005610bc7848254610db7565b90559038610acc565b610be791508c8d3d106106d1576106c38183610e53565b38610ba8565b6040513d85823e3d90fd5b91925050813b156109fe57839160448492604051948593849263076426ed60e11b845260048401528160248401525af18015610c4d579060019291610c3e575b50610bb4565b610c4790610e29565b38610c38565b6040513d84823e3d90fd5b83810151421015915081610c6e575b5038610b6c565b6040915001511538610c67565b91925050604051639cf1969b60e01b81528260048201528781602481875afa9081156106d85790889392918791610cb6575b50151590610b65565b848193949592503d8311610ce6575b610ccf8183610e53565b81010312610ce257908792915138610cad565b8580fd5b503d610cc5565b610d049150853d87116106d1576106c38183610e53565b38610b59565b610d22915060603d81116108b2576108a48183610e53565b38610b28565b6040513d87823e3d90fd5b634e487b7160e01b85526011600452602485fd5b90508481813d8311610d6d575b610d5e8183610e53565b810103126109fe575138610a86565b503d610d54565b9050346109395781600319360112610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b91908203918211610dc457565b634e487b7160e01b600052601160045260246000fd5b8115610de4570490565b634e487b7160e01b600052601260045260246000fd5b81810292918115918404141715610dc457565b6000198114610dc45760010190565b91908201809211610dc457565b67ffffffffffffffff8111610e3d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610e3d57604052565b519081600f0b820361085357565b600092600091600190815490808552602091600283526040968787205496879860018060a01b037f00000000000000000000000000000000000000000000000000000000000000001681519363e58f594760e01b8552600495878787015260249589818881875afa90811561122c5786916111ff575b50156111ec578b156110d5575b818c10156110c757808c106110bf575b5090839291899897969594995b610f34575b50505050505050505050565b9091929394959697989a9c6032808d10156110b757828f10156110b75762093a808f019e8f81116110a5578f9062093a7f810191821161109357865191637028a55d60e11b83528b8b840152808a8401528c836044818a5afa92831561105a578993611064575b50875190630981b24d60e41b82528b8201528c818b818a5afa90811561105a578991611029575b508061102357508c925b66038d7ea4c68000821015611013575092610ffa611007936102838f9998979694611000958e015490610dfa565b90610e1c565b9e9c610e0d565b99989796959493610f23565b634e487b7160e01b89528a528888fd5b92610fcc565b90508c81813d8311611053575b6110408183610e53565b8101031261104f575138610fc2565b8880fd5b503d611036565b88513d8b823e3d90fd5b9092508c81813d831161108c575b61107c8183610e53565b8101031261104f57519138610f9b565b503d611072565b634e487b7160e01b885260118a528888fd5b634e487b7160e01b8752601189528787fd5b509c9a610f28565b9a5088610f16565b50929b505050505050505050565b9b509091809a50516322565a1560e11b81528686820152888582015260a081604481865afa9081156111e257908b9392918591611142575b5062093a809b8c910151048b81029b818d04149015171561112f578a9b610f06565b5050634e487b7160e01b82525060118352fd5b919293505060a0813d82116111da575b8161115f60a09383610e53565b810103126111d6578a519060a0820182811067ffffffffffffffff8211176111c4578c94939291608091865261119481610e75565b83526111a18b8201610e75565b8b840152858101518684015260608101516060840152015160808201523861110d565b634e487b7160e01b8652604188528686fd5b8380fd5b3d9150611152565b8b513d86823e3d90fd5b5050505096975050505050509250918190565b90508981813d8311611225575b6112168183610e53565b81010312610ce2575138610ef9565b503d61120c565b85513d88823e3d90fd5b908160609103126108535760405190606082019082821067ffffffffffffffff831117610e3d57604091825261126b81610e75565b8352602081015160208401520151801515810361085357604082015290565b9081602091031261085357516001600160a01b03811681036108535790565b3d156112e4573d9067ffffffffffffffff8211610e3d57604051916112d8601f8201601f191660200184610e53565b82523d6000602084013e565b606090565b156112f057565b60405162461bcd60e51b81526020600482015260186024820152773a3930b739b332b9103932bbb0b93239903330b4b632b21760411b6044820152606490fd5b600260005414611341576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b906113919082610e83565b91928060005260026020528260406000205583156113d6577fcae2990aa9af8eb1c64713b7eddb3a80bf18e49a94a13fe0d0002b5d61d58f006020604051868152a490565b5050505060009056fece749457b74e10f393f2c6b1ce4261b78791376db5a3f501477a809f03f500d6a164736f6c6343000813000a";

type RewardsDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsDistributor__factory extends ContractFactory {
  constructor(...args: RewardsDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ve, overrides || {});
  }
  override deploy(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ve, overrides || {}) as Promise<
      RewardsDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardsDistributor__factory {
    return super.connect(runner) as RewardsDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsDistributorInterface {
    return new Interface(_abi) as RewardsDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardsDistributor {
    return new Contract(address, _abi, runner) as unknown as RewardsDistributor;
  }
}
