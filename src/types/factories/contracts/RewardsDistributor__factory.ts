/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RewardsDistributor,
  RewardsDistributorInterface,
} from "../../contracts/RewardsDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotManagedOrNormalNFT",
    type: "error",
  },
  {
    inputs: [],
    name: "NotVault",
    type: "error",
  },
  {
    inputs: [],
    name: "UpdatePeriod",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "CheckpointToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochEnd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimMany",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTokenTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timeCursorOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenLastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensPerWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0346100f157601f61133638819003918201601f19168301916001600160401b038311848410176100f6578084926020946040528339810103126100f157516001600160a01b038116908190036100f15762093a808042048181029181830414901517156100db57600081905560025560805266038d7ea4c6800380546001600160a01b03191633179055604051611229908161010d82396080518181816104fc0152818161055b015281816105da01528181610687015281816106ea0152818161078801528181610a3001528181610c940152610da10152f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c9081631f85071614610c8157508063379607f5146109755780634607bf60146109495780636817031b146108ff57806378e97925146108e1578063899519be146108af5780638ec8468a1461088b578063925489a81461038a578063939ea66b1461036c578063bee5dc3214610163578063d1d58b251461010b578063f4359ce5146100ed5763fbfa77cf146100b9573861000f565b346100e85760003660031901126100e85766038d7ea4c68003546040516001600160a01b039091168152602090f35b600080fd5b346100e85760003660031901126100e857602060405162093a808152f35b346100e85760203660031901126100e85762093a80806002540481810291818304149015171561014d57610143602091600435610d79565b5050604051908152f35b634e487b7160e01b600052601160045260246000fd5b346100e85760003660031901126100e85766038d7ea4c68003546001600160a01b0316330361035a574766038d7ea4c68004906101a1825482610cc3565b91556002546101b08142610cc3565b904260025562093a80918282048381029080820485149015171561014d57926000905b601482106101fc575b6000805160206111fd8339815191526040878151904282526020820152a1005b8085019081861161014d578142106000146102d1575050508015806102c8575b1561027557505066038d7ea4c6800081101561025f576000805160206111fd83398151915291604091600301610253828254610d12565b90555b918380806101dc565b634e487b7160e01b600052603260045260246000fd5b61028b6102856102909342610cc3565b85610cf0565b610cd0565b9166038d7ea4c6800082101561025f576000805160206111fd833981519152926102c1604093600301918254610d12565b9055610256565b5081421461021c565b9194909383801580610351575b1561031557505066038d7ea4c6800081101561025f57600301610302868254610d12565b90555b61030f8394610d03565b906101d3565b61028b61032561032b9388610cc3565b89610cf0565b9066038d7ea4c6800081101561025f5761034a90600301918254610d12565b9055610305565b508186146102de565b6040516362df054560e01b8152600490fd5b346100e85760003660031901126100e8576020600254604051908152f35b346100e85760203660031901126100e85767ffffffffffffffff80600435116100e8573660236004350112156100e85760043560040135116100e8573660246004356004013560051b6004350101116100e85766038d7ea4c6800354604051630a441f7b60e01b815290602090829060049082906001600160a01b03165afa90811561064057600091610859575b5062093a8090814204908282029180830484149015171561014d571061084757806002540490818181020481148215171561014d5760009160005b600435600401358110610490575b50505080610475575b602060405160018152f35b61048866038d7ea4c68004918254610cc3565b90558061046a565b60248160051b60043501013515610842576104b883830260248360051b6004350101356111a3565b806104cd575b506104c890610d03565b610453565b9093604051635a2d1e0760e11b815260248660051b600435010135600482015260608160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561064057600091610813575b5060405163bb941cff60e01b815260248760051b600435010135600482015260208160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610640576000916107f4575b506001600160a01b03161580159190610759575b8115610735575b5015610685576040516331a9108f60e11b815260248660051b600435010135600482015260208160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610640576000808581949382948391610656575b508290821561064c575b6001600160a01b031690f115610640576104c89161063991610d12565b93906104be565b6040513d6000823e3d90fd5b6108fc915061061c565b610678915060203d60201161067e575b6106708183610d49565b810190611184565b8b610612565b503d610666565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156100e8576040519163076426ed60e11b835260248660051b60043501013560048401528060248401526000836044818460018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215610640576104c89361063993610726575b50610d12565b61072f90610d1f565b87610720565b602081015142101591508161074c575b50866105a7565b6040915001511586610745565b9050604051639cf1969b60e01b815260248760051b600435010135600482015260208160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610640576000916107c2575b501515906105a0565b90506020813d6020116107ec575b816107dd60209383610d49565b810103126100e85751876107b9565b3d91506107d0565b61080d915060203d60201161067e576106708183610d49565b8761058c565b610835915060603d60601161083b575b61082d8183610d49565b810190611130565b8661052d565b503d610823565b610461565b60405163465a1c3560e01b8152600490fd5b90506020813d602011610883575b8161087460209383610d49565b810103126100e8575181610418565b3d9150610867565b346100e85760003660031901126100e857602066038d7ea4c6800454604051908152f35b346100e85760203660031901126100e85760043566038d7ea4c680008110156100e85760209060030154604051908152f35b346100e85760003660031901126100e8576020600054604051908152f35b346100e85760203660031901126100e8576001600160a01b03600435818116908190036100e85766038d7ea4c68003918254908116330361035a576001600160a01b031916179055005b346100e85760203660031901126100e85760043560005260016020526020604060002054604051908152f35b346100e8576020806003193601126100e85766038d7ea4c6800354604051630a441f7b60e01b81526001600160a01b039160048035929185918391829087165afa90811561064057600091610c54575b5062093a8090814204908282029180830484149015171561014d571061084757806002540481810291818304149015171561014d57610a0490826111a3565b918215908115610a1a575b505050604051908152f35b604051635a2d1e0760e11b8152600481018490527f0000000000000000000000000000000000000000000000000000000000000000821693606082602481885afa91821561064057600092610c34575b5060405163bb941cff60e01b815260048101829052918783602481895afa9283156106405788938591600091610c17575b50161590811591610baf575b8115610b8c575b5015610b3b576024604051809681936331a9108f60e11b835260048301525afa80156106405760009384938493849388938591610b1e575b508492610b14575b1690f115610640575b66038d7ea4c68004610b0a828254610cc3565b9055828080610a0f565b6108fc9250610aee565b610b3591508a3d8c1161067e576106708183610d49565b8a610ae6565b92505050813b156100e85782916044600092604051948593849263076426ed60e11b845260048401528160248401525af1801561064057610b7d575b50610af7565b610b8690610d1f565b82610b77565b83810151421015915081610ba2575b5088610aae565b6040915001511588610b9b565b604051639cf1969b60e01b815260048101849052935090508783602481895afa8015610640578893600091610be8575b50151590610aa7565b84819592503d8311610c10575b610bff8183610d49565b810103126100e85787925189610bdf565b503d610bf5565b610c2e9150853d871161067e576106708183610d49565b8a610a9b565b610c4d91925060603d811161083b5761082d8183610d49565b9087610a6a565b90508381813d8311610c7a575b610c6b8183610d49565b810103126100e85751846109c5565b503d610c61565b346100e85760003660031901126100e8577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9190820391821161014d57565b8115610cda570490565b634e487b7160e01b600052601260045260246000fd5b8181029291811591840414171561014d57565b600019811461014d5760010190565b9190820180921161014d57565b67ffffffffffffffff8111610d3357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d3357604052565b519081600f0b82036100e857565b6000926000918254908084526001916020918383526040968787205496879860018060a01b037f00000000000000000000000000000000000000000000000000000000000000001681519363e58f594760e01b8552600496868887015260249589818881875afa9081156111265786916110f5575b50156110e2578b15610fcb575b818c1015610fbd57808c10610fb5575b5090839291899897969594995b610e29575b50505050505050505050565b9091929394959697989a9c6032808d1015610fad57828f1015610fad5762093a808f019e8f8111610f9b578f9062093a7f8101918211610f8957865191637028a55d60e11b83528a8c840152808a8401528c836044818a5afa928315610f50578993610f5a575b50875190630981b24d60e41b82528c8201528c818b818a5afa908115610f50578991610f1f575b5080610f1957508c925b66038d7ea4c68000821015610f09575092610ef0610efd9361028b8f9998979694610ef6956003015490610cf0565b90610d12565b9e9c610d03565b99989796959493610e18565b634e487b7160e01b89528b528888fd5b92610ec1565b90508c81813d8311610f49575b610f368183610d49565b81010312610f45575138610eb7565b8880fd5b503d610f2c565b88513d8b823e3d90fd5b9092508c81813d8311610f82575b610f728183610d49565b81010312610f4557519138610e90565b503d610f68565b634e487b7160e01b885260118b528888fd5b634e487b7160e01b875260118a528787fd5b509c9a610e1d565b9a5088610e0b565b50929b505050505050505050565b9b509091809a50516322565a1560e11b81528587820152888582015260a081604481865afa9081156110d857908b9392918591611038575b5062093a809b8c910151048b81029b818d041490151715611025578a9b610dfb565b5050634e487b7160e01b82525060118452fd5b919293505060a0813d82116110d0575b8161105560a09383610d49565b810103126110cc578a519060a0820182811067ffffffffffffffff8211176110ba578c94939291608091865261108a81610d6b565b83526110978b8201610d6b565b8b8401528581015186840152606081015160608401520151608082015238611003565b634e487b7160e01b8652604189528686fd5b8380fd5b3d9150611048565b8b513d86823e3d90fd5b5050505096975050505050509250918190565b90508981813d831161111f575b61110c8183610d49565b8101031261111b575138610dee565b8580fd5b503d611102565b85513d88823e3d90fd5b908160609103126100e85760405190606082019082821067ffffffffffffffff831117610d3357604091825261116581610d6b565b835260208101516020840152015180151581036100e857604082015290565b908160209103126100e857516001600160a01b03811681036100e85790565b906111ae9082610d79565b91928060005260016020528260406000205583156111f3577fcae2990aa9af8eb1c64713b7eddb3a80bf18e49a94a13fe0d0002b5d61d58f006020604051868152a490565b5050505060009056fece749457b74e10f393f2c6b1ce4261b78791376db5a3f501477a809f03f500d6a164736f6c6343000813000a";

type RewardsDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsDistributor__factory extends ContractFactory {
  constructor(...args: RewardsDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ve, overrides || {});
  }
  override deploy(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ve, overrides || {}) as Promise<
      RewardsDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardsDistributor__factory {
    return super.connect(runner) as RewardsDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsDistributorInterface {
    return new Interface(_abi) as RewardsDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardsDistributor {
    return new Contract(address, _abi, runner) as unknown as RewardsDistributor;
  }
}
