/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RewardsDistributor,
  RewardsDistributorInterface,
} from "../../contracts/RewardsDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotManagedOrNormalNFT",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "UpdatePeriod",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "CheckpointToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochStart",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochEnd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimMany",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTokenTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timeCursorOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenLastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensPerWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ea57601f61123c38819003918201601f19168301916001600160401b038311848410176100ef578084926020946040528339810103126100ea57516001600160a01b038116908190036100ea5762093a808042048181029181830414901517156100d457600081905560025560805266038d7ea4c6800380546001600160a01b031916331790556040516111369081610106823960805181818161055a015281816105d60152818161068b015281816106e701528181610761015281816109a201528181610ba10152610cce0152f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081630754617214610bc5575080631f85071614610b81578063379607f5146108e75780634607bf60146108bb57806378e979251461089d578063899519be1461086b5780638ec8468a14610847578063925489a8146103e8578063939ea66b146103ca578063bee5dc321461019d578063d1d58b2514610145578063f4359ce5146101275763fca3b5aa146100ae57600080fd5b34610122576020366003190112610122576004356001600160a01b03908181168091036101225766038d7ea4c680039182549081163303610110577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055005b604051633e34a41b60e21b8152600490fd5b600080fd5b3461012257600036600319011261012257602060405162093a808152f35b346101225760203660031901126101225762093a8080600254048181029181830414901517156101875761017d602091600435610ca5565b5050604051908152f35b634e487b7160e01b600052601160045260246000fd5b34610122576000366003190112610122576001600160a01b0366038d7ea4c6800354163303610110574766038d7ea4c68004906101db825482610bef565b91556002546101ea8142610bef565b904260025562093a80918282048381029080820485149015171561018757926000905b60148210610248575b7fce749457b74e10f393f2c6b1ce4261b78791376db5a3f501477a809f03f500d66040878151904282526020820152a1005b808501908186116101875781421060001461034157505050801580610338575b156102d357505066038d7ea4c680008110156102bd577fce749457b74e10f393f2c6b1ce4261b78791376db5a3f501477a809f03f500d6916040916003016102b1828254610c3e565b90555b91838080610216565b634e487b7160e01b600052603260045260246000fd5b6102e96102e36102ee9342610bef565b85610c1c565b610bfc565b9166038d7ea4c680008210156102bd577fce749457b74e10f393f2c6b1ce4261b78791376db5a3f501477a809f03f500d692610331604093600301918254610c3e565b90556102b4565b50814214610268565b91949093838015806103c1575b1561038557505066038d7ea4c680008110156102bd57600301610372868254610c3e565b90555b61037f8394610c2f565b9061020d565b6102e961039561039b9388610bef565b89610c1c565b9066038d7ea4c680008110156102bd576103ba90600301918254610c3e565b9055610375565b5081861461034e565b34610122576000366003190112610122576020600254604051908152f35b346101225760203660031901126101225767ffffffffffffffff806004351161012257366023600435011215610122576004356004013511610122573660246004356004013560051b60043501011161012257600060206001600160a01b0366038d7ea4c680035416600460405180948193630a441f7b60e01b83525af190811561063c57600091610815575b5062093a8090814204908282029180830484149015171561018757106108035780600254049081818102048114821517156101875760009160005b6004356004013581106104ed575b505050806104d2575b602060405160018152f35b6104e566038d7ea4c68004918254610bef565b9055806104c7565b60248160051b600435010135156107fe5761051583830260248360051b6004350101356110d0565b8061052a575b5061052590610c2f565b6104b0565b9093604051635a2d1e0760e11b815260248660051b60043501013560048201526060816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561063c576000916107cf575b50602081015142101590816107c2575b508015610732575b15610681576040516331a9108f60e11b815260248660051b60043501013560048201526020816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561063c576000808581949382948391610652575b5082908215610648575b6001600160a01b031690f11561063c576105259161063591610c3e565b939061051b565b6040513d6000823e3d90fd5b6108fc9150610618565b610674915060203d60201161067a575b61066c8183610c75565b8101906110b1565b8b61060e565b503d610662565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15610122576040519163076426ed60e11b835260248660051b6004350101356004840152806024840152600083604481846001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af191821561063c576105259361063593610723575b50610c3e565b61072c90610c4b565b8761071d565b5060405163bb941cff60e01b815260248660051b60043501013560048201526020816024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa801561063c576001600160a01b03916000916107a3575b501615156105a3565b6107bc915060203d60201161067a5761066c8183610c75565b8761079a565b604091500151158661059b565b6107f1915060603d6060116107f7575b6107e98183610c75565b81019061105d565b8661058b565b503d6107df565b6104be565b60405163465a1c3560e01b8152600490fd5b90506020813d60201161083f575b8161083060209383610c75565b81010312610122575181610475565b3d9150610823565b3461012257600036600319011261012257602066038d7ea4c6800454604051908152f35b346101225760203660031901126101225760043566038d7ea4c680008110156101225760209060030154604051908152f35b34610122576000366003190112610122576020600054604051908152f35b346101225760203660031901126101225760043560005260016020526020604060002054604051908152f35b3461012257602080600319360112610122576004356001600160a01b03906000838366038d7ea4c680035416600460405180948193630a441f7b60e01b83525af190811561063c57600091610b54575b5062093a8090814204908282029180830484149015171561018757106108035780600254048181029181830414901517156101875761097690826110d0565b91821590811561098c575b505050604051908152f35b604051635a2d1e0760e11b8152600481018490527f0000000000000000000000000000000000000000000000000000000000000000821693606082602481885afa801561063c578792600091610b36575b50828101514210159081610b29575b508015610ad1575b15610a80576024604051809681936331a9108f60e11b835260048301525afa801561063c5760009384938493849388938591610a63575b508492610a59575b1690f11561063c575b66038d7ea4c68004610a4f828254610bef565b9055828080610981565b6108fc9250610a33565b610a7a91508a3d8c1161067a5761066c8183610c75565b8a610a2b565b92505050813b156101225782916044600092604051948593849263076426ed60e11b845260048401528160248401525af1801561063c57610ac2575b50610a3c565b610acb90610c4b565b82610abc565b5060405163bb941cff60e01b81526004810182905291508682602481885afa91821561063c5787928491600091610b0c575b501615156109f4565b610b239150843d861161067a5761066c8183610c75565b89610b03565b60409150015115886109ec565b610b4e915060603d81116107f7576107e98183610c75565b886109dd565b90508381813d8311610b7a575b610b6b8183610c75565b81010312610122575184610937565b503d610b61565b346101225760003660031901126101225760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610122576000366003190112610122576020906001600160a01b0366038d7ea4c6800354168152f35b9190820391821161018757565b8115610c06570490565b634e487b7160e01b600052601260045260246000fd5b8181029291811591840414171561018757565b60001981146101875760010190565b9190820180921161018757565b67ffffffffffffffff8111610c5f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610c5f57604052565b519081600f0b820361012257565b600092600091825490808452600191602091838352604096878720549687986001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681519363e58f594760e01b8552600496868887015260249589818881875afa908115611053578691611022575b501561100f578b15610ef8575b818c1015610eea57808c10610ee2575b5090839291899897969594995b610d56575b50505050505050505050565b9091929394959697989a9c6032808d1015610eda57828f1015610eda5762093a808f019e8f8111610ec8578f9062093a7f8101918211610eb657865191637028a55d60e11b83528a8c840152808a8401528c836044818a5afa928315610e7d578993610e87575b50875190630981b24d60e41b82528c8201528c818b818a5afa908115610e7d578991610e4c575b5080610e4657508c925b66038d7ea4c68000821015610e36575092610e1d610e2a936102e98f9998979694610e23956003015490610c1c565b90610c3e565b9e9c610c2f565b99989796959493610d45565b634e487b7160e01b89528b528888fd5b92610dee565b90508c81813d8311610e76575b610e638183610c75565b81010312610e72575138610de4565b8880fd5b503d610e59565b88513d8b823e3d90fd5b9092508c81813d8311610eaf575b610e9f8183610c75565b81010312610e7257519138610dbd565b503d610e95565b634e487b7160e01b885260118b528888fd5b634e487b7160e01b875260118a528787fd5b509c9a610d4a565b9a5088610d38565b50929b505050505050505050565b9b509091809a50516322565a1560e11b81528587820152888582015260a081604481865afa90811561100557908b9392918591610f65575b5062093a809b8c910151048b81029b818d041490151715610f52578a9b610d28565b5050634e487b7160e01b82525060118452fd5b919293505060a0813d8211610ffd575b81610f8260a09383610c75565b81010312610ff9578a519060a0820182811067ffffffffffffffff821117610fe7578c949392916080918652610fb781610c97565b8352610fc48b8201610c97565b8b8401528581015186840152606081015160608401520151608082015238610f30565b634e487b7160e01b8652604189528686fd5b8380fd5b3d9150610f75565b8b513d86823e3d90fd5b5050505096975050505050509250918190565b90508981813d831161104c575b6110398183610c75565b81010312611048575138610d1b565b8580fd5b503d61102f565b85513d88823e3d90fd5b908160609103126101225760405190606082019082821067ffffffffffffffff831117610c5f57604091825261109281610c97565b8352602081015160208401520151801515810361012257604082015290565b9081602091031261012257516001600160a01b03811681036101225790565b906110db9082610ca5565b9192806000526001602052826040600020558315611120577fcae2990aa9af8eb1c64713b7eddb3a80bf18e49a94a13fe0d0002b5d61d58f006020604051868152a490565b5050505060009056fea164736f6c6343000813000a";

type RewardsDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsDistributor__factory extends ContractFactory {
  constructor(...args: RewardsDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ve, overrides || {});
  }
  override deploy(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ve, overrides || {}) as Promise<
      RewardsDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardsDistributor__factory {
    return super.connect(runner) as RewardsDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsDistributorInterface {
    return new Interface(_abi) as RewardsDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardsDistributor {
    return new Contract(address, _abi, runner) as unknown as RewardsDistributor;
  }
}
