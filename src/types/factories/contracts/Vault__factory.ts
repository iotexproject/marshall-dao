/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsDistributor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFund",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRate",
    type: "error",
  },
  {
    inputs: [],
    name: "NotGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDonation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "Emission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "VeRateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "WeeklyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipcient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "changeVeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weekly",
        type: "uint256",
      },
    ],
    name: "changeWeekly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistributor",
    outputs: [
      {
        internalType: "contract IRewardsDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "veRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_recipcient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e03461010657601f610c0f38819003918201601f19168301916001600160401b0383118484101761010b578084926060946040528339810103126101065761004781610121565b61005f604061005860208501610121565b9301610121565b6103e860015569152d02c7e14af68000006002556001600160a01b0391821660805291811660a052600080546001600160a01b031916331790551660c05262093a80428190048082029181159183041417156100f057600355604051610ad99081610136823960805181818161054b015261071a015260a051816107c1015260c0518181816104ea015261075e0152f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101065756fe60806040908082526004908136101561004f575b5050361561002057600080fd5b600090513481527f597440e65d8cdea1298e19df50e115bda25508180452d87a7f4f99195fb843a460203392a3005b600091823560e01c9182630a441f7b1461080b575081630c340a24146107e55781631f850716146107a157816326cfc17b146107825781633f2a55401461073e57816346c96aac146106fa5781636a110383146106a0578163829965cc14610681578163a83627de14610459578163ada6565e1461043a578163c42cf535146103b9578163d9caed12146102bc578163e69d849d14610205578163ed88c68e146101b3578163f01aea0314610130575063f4359ce51461010f5780610013565b903461012c578160031936011261012c576020905162093a808152f35b5080fd5b905082346101af5760203660031901126101af578135916001600160a01b0384541633036101a15761138883116101935750816020917f1b3e838a14abc73095667e9ce064209c4643de8849f0efbf7f4ea8f8a7103f399360015551908152a180f35b9051636a43f8d160e01b8152fd5b9051633b8d9d7560e21b8152fd5b8280fd5b839150826003193601126101af5734156101f757508190513481527f597440e65d8cdea1298e19df50e115bda25508180452d87a7f4f99195fb843a460203392a380f35b9051636370392160e11b8152fd5b905082346101af57806003193601126101af57610220610827565b906001600160a01b036024359216928151906323b872dd60e01b60208301523360248301523060448301528360648301526064825260a082019082821067ffffffffffffffff8311176102a75750825261027a908461086c565b519081527f597440e65d8cdea1298e19df50e115bda25508180452d87a7f4f99195fb843a460203392a380f35b604190634e487b7160e01b6000525260246000fd5b839150346101af5760603660031901126101af576102d8610827565b602435926001600160a01b038085168095036103b557604435928187541633036103a55716928361035b5750848285828215610352575b839283928392f115610349575b519081527f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f760203392a480f35b513d85823e3d90fd5b506108fc61030f565b81519063a9059cbb60e01b602083015285602483015283604483015260448252608082019082821067ffffffffffffffff8311176102a7575082526103a0908461086c565b61031c565b8251633b8d9d7560e21b81528590fd5b8580fd5b839150346101af5760203660031901126101af576103d5610827565b908354916001600160a01b0390818416330361042a571692831561041d5750507fffffffffffffffffffffffff00000000000000000000000000000000000000001617815580f35b5163d92e233d60e01b8152fd5b8451633b8d9d7560e21b81528390fd5b82843461012c578160031936011261012c576020906001549051908152f35b905082346101af57826003193601126101af576003549162093a809081840180851161063a57421015610491575b6020848451908152f35b8091935054600019811461066e57600101815582420483810293818504149015171561065b57826003556002549081471061064d5760015480830290838204148315171561063a5761271090046001600160a01b0386817f000000000000000000000000000000000000000000000000000000000000000016818482828215610631575b839283928392f11561062557803b1561012c57819085885180948193635f72ee1960e11b83525af1801561061b57610608575b507f000000000000000000000000000000000000000000000000000000000000000016908303918383116105f557908691813b156101af57855180948193630314777960e21b83525af180156105eb576105d3575b506020935081519081527ff54dbf4cddb908bac0d67a3e6d3e4de95d0e7bc059afe2d34b37a6ebbc3879ca843392a28380610487565b6105dd8591610842565b6105e7578361059d565b8380fd5b83513d87823e3d90fd5b634e487b7160e01b875260119052602486fd5b61061490979197610842565b9587610548565b86513d8a823e3d90fd5b508551903d90823e3d90fd5b506108fc610515565b634e487b7160e01b865260118252602486fd5b8251636a259e3160e11b8152fd5b634e487b7160e01b845260119052602483fd5b634e487b7160e01b855260118252602485fd5b839150346101af57826003193601126101af5760209250549051908152f35b905082346101af5760203660031901126101af578135916001600160a01b0384541633036101a15750816020917f6b7d0eeb50ab9007d612c3d47bc900447594cde214923c1b9d0f2b1fc960ca719360025551908152a180f35b82843461012c578160031936011261012c57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b82843461012c578160031936011261012c57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b82843461012c578160031936011261012c576020906002549051908152f35b82843461012c578160031936011261012c57602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b82843461012c578160031936011261012c576001600160a01b0360209254169051908152f35b83903461012c578160031936011261012c576020906003548152f35b600435906001600160a01b038216820361083d57565b600080fd5b67ffffffffffffffff811161085657604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03909291921660408051938185019467ffffffffffffffff95818110878211176108565783526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808487829651910182855af13d156109eb573d918883116109d757855192601f19603f81601f8401160116840199848b10908b11176109c3578697989961091796975283528286893d92013e6109f8565b80519182159185831561099c575b505050905015610933575050565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b91938180945001031261012c578301519081151582036109c0575080388085610925565b80fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526041600452602485fd5b6109179394959697506060915b91929015610a5a5750815115610a0c575090565b3b15610a155790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610a6d5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610ab3575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610a9056fea164736f6c6343000813000a";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _voter: AddressLike,
    _ve: AddressLike,
    _rewardsDistributor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _voter,
      _ve,
      _rewardsDistributor,
      overrides || {}
    );
  }
  override deploy(
    _voter: AddressLike,
    _ve: AddressLike,
    _rewardsDistributor: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _voter,
      _ve,
      _rewardsDistributor,
      overrides || {}
    ) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault;
  }
}
