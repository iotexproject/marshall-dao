/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFund",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRate",
    type: "error",
  },
  {
    inputs: [],
    name: "NotGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDonation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroEmission",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "Emission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    name: "GovernorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "ShareRateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "WeeklyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipcient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "IOTX_NATIVE_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "changeShareRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weekly",
        type: "uint256",
      },
    ],
    name: "changeWeekly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "emitReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shareRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_recipcient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c33908161001c8239f35b600080fdfe608060408181526004918236101561002a575b505050361561002057600080fd5b610028610bf6565b005b600092833560e01c9182630a441f7b1461092d575081630c340a241461090457816315796c221461071a578163259279b9146106fe57816326cfc17b146106e057816339b70e38146106b757816346c96aac1461068b578163485cc955146104cb5781636a11038314610471578163829965cc14610452578163c42cf535146103c3578163d9caed1214610287578163e69d849d146101d3578163ed88c68e146101b9578163f4359ce51461019b578163f544150d14610116575063fb802a65146100f55780610012565b346101125781600319360112610112576020906003549051908152f35b5080fd5b9190503461019757602036600319011261019757600154823592906001600160a01b0316330361018957611388831161017b5750816020917f7ee68f090f0eb3aabc02a65d62d3e73a4a735870b09c9d07473d00f9ffd2f12b9360035551908152a180f35b9051636a43f8d160e01b8152fd5b9051633b8d9d7560e21b8152fd5b8280fd5b5050346101125781600319360112610112576020905162093a808152f35b83806003193601126101d0576101cd610bf6565b80f35b80fd5b919050346101975780600319360112610197576101ee610949565b906024359160018060a01b0316928151906323b872dd60e01b60208301523360248301523060448301528360648301526064825260a082019082821067ffffffffffffffff831117610274575082526102479084610a2a565b519081527f597440e65d8cdea1298e19df50e115bda25508180452d87a7f4f99195fb843a460203392a380f35b634e487b7160e01b875260419052602486fd5b905034610197576060366003190112610197576102a2610949565b6024356001600160a01b0381811694918590036103bf5760443592816001541633036103af57169260018403610352578580808086895af16102e26109ea565b501561031757505b519081527f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f760203392a480f35b6020606492519162461bcd60e51b835282015260166024820152753bb4ba34323930bb903a37b5b2b7103330b4b632b21760511b6044820152fd5b81519063a9059cbb60e01b602083015285602483015283604483015260448252608082019082821067ffffffffffffffff83111761039c575082526103979084610a2a565b6102ea565b634e487b7160e01b885260419052602487fd5b8251633b8d9d7560e21b81528590fd5b8580fd5b905034610197576020366003190112610197576103de610949565b60015491906001600160a01b0390818416330361044257169283156104355750506001600160a01b03191681176001557f5ffbefd23f1844198adf645535c8dce8d9f3f2f9f5e917bf4e3aa8fc90299a908280a280f35b5163d92e233d60e01b8152fd5b8451633b8d9d7560e21b81528390fd5b5050346101125781600319360112610112576020906006549051908152f35b9190503461019757602036600319011261019757600154823592906001600160a01b031633036101895791602091817f6b7d0eeb50ab9007d612c3d47bc900447594cde214923c1b9d0f2b1fc960ca71945551908152a180f35b919050346101975780600319360112610197576104e6610949565b906024359260018060a01b0384168094036106875784549060ff8260081c16159182809361067a575b8015610663575b156106095760ff1981166001178755826105f8575b5085549362010000600160b01b039060101b16948562010000600160b01b0319861617875560018060a01b03193381600154161760015560025416176002556103e860035569152d02c7e14af6800000815562093a80908142048281029281840414901517156105e557506005556105a1578380f35b610100600160b01b0319909116909117825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a13880808380f35b634e487b7160e01b875260119052602486fd5b61ffff19166101011786553861052b565b835162461bcd60e51b8152602081840152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105165750600160ff821614610516565b50600160ff82161061050f565b8480fd5b5050346101125781600319360112610112579054905160109190911c6001600160a01b03168152602090f35b50503461011257816003193601126101125760025490516001600160a01b039091168152602090f35b90503461019757826003193601126101975760209250549051908152f35b5050346101125781600319360112610112576020905160018152f35b8383346101125781600319360112610112576005549162093a808084018085116108f157421015610750575b6020848451908152f35b60065460001981146108f15760010160065580420493818502948086048314901517156108f15790610785610791928661098d565b04846005558554610964565b908147106108e1576127106107a860035484610964565b049081610864575b805460101c6001600160a01b0316916107c9908461098d565b91803b1561011257819087865180958193630314777960e21b83525af1801561085857610828575b50506020935081519081527ff54dbf4cddb908bac0d67a3e6d3e4de95d0e7bc059afe2d34b37a6ebbc3879ca843392a28380610746565b67ffffffffffffffff8211610845575060209450825284806107f1565b634e487b7160e01b815260418652602490fd5b508351903d90823e3d90fd5b600254845163a8031a1d60e01b815260018882015260248101849052906020908290604490829087906001600160a01b03165af180156108d7576108a9575b506107b0565b6108c99060203d81116108d0575b6108c1818361099a565b8101906109d2565b50866108a3565b503d6108b7565b85513d84823e3d90fd5b8251636a259e3160e11b81528590fd5b634e487b7160e01b835260118652602483fd5b50503461011257816003193601126101125760015490516001600160a01b039091168152602090f35b8490346101125781600319360112610112576020906005548152f35b600435906001600160a01b038216820361095f57565b600080fd5b8181029291811591840414171561097757565b634e487b7160e01b600052601160045260246000fd5b9190820391821161097757565b90601f8019910116810190811067ffffffffffffffff8211176109bc57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261095f5751801515810361095f5790565b3d15610a25573d9067ffffffffffffffff82116109bc5760405191610a19601f8201601f19166020018461099a565b82523d6000602084013e565b606090565b60408051908101916001600160a01b031667ffffffffffffffff8311828410176109bc57610a9a926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1610a946109ea565b91610b22565b805190828215928315610b0a575b50505015610ab35750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b610b1a93508201810191016109d2565b388281610aa8565b91929015610b845750815115610b36575090565b3b15610b3f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610b975750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610bdd575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610bba565b60016040513481527f597440e65d8cdea1298e19df50e115bda25508180452d87a7f4f99195fb843a460203392a356fea164736f6c6343000813000a";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault;
  }
}
