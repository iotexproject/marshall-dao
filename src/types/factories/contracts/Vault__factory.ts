/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFund",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRate",
    type: "error",
  },
  {
    inputs: [],
    name: "NotGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDonation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "Emission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    name: "GovernorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "VeRateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
    ],
    name: "WeeklyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipcient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "changeVeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weekly",
        type: "uint256",
      },
    ],
    name: "changeWeekly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsDistributor",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistributor",
    outputs: [
      {
        internalType: "contract IRewardsDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "veRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_recipcient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610bb4908161001c8239f35b600080fdfe60806040908082526004908136101561003d575b5050361561002057600080fd5b60009051348152600080516020610b8883398151915260203392a3005b600091823560e01c9182630a441f7b146108a7575081630c340a241461087e57816326cfc17b1461085f5781633f2a55401461083657816346c96aac1461080a578163485cc9551461064a5781636a110383146105f0578163829965cc146105d1578163a83627de14610435578163ada6565e14610416578163c42cf53514610386578163d9caed1214610287578163e69d849d146101e3578163ed88c68e146101a3578163f01aea031461011e575063f4359ce5146100fd5780610013565b903461011a578160031936011261011a576020905162093a808152f35b5080fd5b9050823461019f57602036600319011261019f57600154823592906001600160a01b031633036101915761138883116101835750816020917f1b3e838a14abc73095667e9ce064209c4643de8849f0efbf7f4ea8f8a7103f399360035551908152a180f35b9051636a43f8d160e01b8152fd5b9051633b8d9d7560e21b8152fd5b8280fd5b8391508260031936011261019f5734156101d55750819051348152600080516020610b8883398151915260203392a380f35b9051636370392160e11b8152fd5b9050823461019f578060031936011261019f576101fe6108c3565b906024359160018060a01b0316928151906323b872dd60e01b60208301523360248301523060448301528360648301526064825260a082019082821067ffffffffffffffff83111761027257508252610257908461093e565b51908152600080516020610b8883398151915260203392a380f35b604190634e487b7160e01b6000525260246000fd5b8391503461019f57606036600319011261019f576102a36108c3565b6024356001600160a01b03818116949185900361038257604435928160015416330361037257169283610328575084828582821561031f575b839283928392f115610316575b519081527f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f760203392a480f35b513d85823e3d90fd5b506108fc6102dc565b81519063a9059cbb60e01b602083015285602483015283604483015260448252608082019082821067ffffffffffffffff8311176102725750825261036d908461093e565b6102e9565b8251633b8d9d7560e21b81528590fd5b8580fd5b8391503461019f57602036600319011261019f576103a26108c3565b60015491906001600160a01b0390818416330361040657169283156103f95750506001600160a01b03191681176001557f5ffbefd23f1844198adf645535c8dce8d9f3f2f9f5e917bf4e3aa8fc90299a908280a280f35b5163d92e233d60e01b8152fd5b8451633b8d9d7560e21b81528390fd5b82843461011a578160031936011261011a576020906003549051908152f35b9050823461019f578260031936011261019f576005549162093a808084018085116105be5742101561046c575b6020848451908152f35b60065460001981146105be5760010160065580420493818502948086048314901517156105be57906104a16104ad9286610907565b048460055582546108de565b908147106105b0576127106104c4600354846108de565b0460018060a01b03806002541687813b156105ad578391858851809481936306f4a2cd60e41b83525af180156105a35761058a575b509061050d8792835460101c169185610907565b92813b1561019f57855180948193630314777960e21b83525af1801561058057610568575b506020935081519081527ff54dbf4cddb908bac0d67a3e6d3e4de95d0e7bc059afe2d34b37a6ebbc3879ca843392a28380610462565b6105728591610914565b61057c5783610532565b8380fd5b83513d87823e3d90fd5b9661059a61050d98939293610914565b969190916104f9565b86513d8a823e3d90fd5b80fd5b8251636a259e3160e11b8152fd5b634e487b7160e01b865260118352602486fd5b82843461011a578160031936011261011a576020906006549051908152f35b9050823461019f57602036600319011261019f57600154823592906001600160a01b031633036101915791602091817f6b7d0eeb50ab9007d612c3d47bc900447594cde214923c1b9d0f2b1fc960ca71945551908152a180f35b9050823461019f578060031936011261019f576106656108c3565b906024359260018060a01b0384168094036108065784549060ff8260081c1615918280936107f9575b80156107e2575b156107885760ff198116600117875582610777575b5085549362010000600160b01b039060101b16948562010000600160b01b0319861617875560018060a01b03193381600154161760015560025416176002556103e860035569152d02c7e14af6800000815562093a80908142048281029281840414901517156107645750600555610720578380f35b610100600160b01b0319909116909117825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a18180808380f35b634e487b7160e01b875260119052602486fd5b61ffff1916610101178655866106aa565b835162461bcd60e51b8152602081840152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156106955750600160ff821614610695565b50600160ff82161061068e565b8480fd5b82843461011a578160031936011261011a579054905160109190911c6001600160a01b03168152602090f35b82843461011a578160031936011261011a5760025490516001600160a01b039091168152602090f35b8391503461019f578260031936011261019f5760209250549051908152f35b82843461011a578160031936011261011a5760015490516001600160a01b039091168152602090f35b83903461011a578160031936011261011a576020906005548152f35b600435906001600160a01b03821682036108d957565b600080fd5b818102929181159184041417156108f157565b634e487b7160e01b600052601160045260246000fd5b919082039182116108f157565b67ffffffffffffffff811161092857604052565b634e487b7160e01b600052604160045260246000fd5b6040805167ffffffffffffffff94936001600160a01b039093169290808301868111828210176109285783526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808487829651910182855af13d15610aa6573d91888311610a9257855192601f19603f81601f8401160116840199848b10908b1117610a7e57869798996109e896975283528286893d92013e610ab3565b805191821591858315610a5a575b505050905015610a04575050565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b91938180945001031261011a578301519081151582036105ad5750803880856109f6565b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b85526041600452602485fd5b6109e89394959697506060915b91929015610b155750815115610ac7575090565b3b15610ad05790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610b285750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610b6e575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610b4b56fe597440e65d8cdea1298e19df50e115bda25508180452d87a7f4f99195fb843a4a164736f6c6343000813000a";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault;
  }
}
