/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VeArtProxy,
  VeArtProxyInterface,
} from "../../contracts/VeArtProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "circles",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "corners",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "curves",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "explosion",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "generateConfig",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "interlockingCircles",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "lineArtPathsOnly",
    outputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "spiral",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "twoStripes",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "wormhole",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "$f5dabb00d97932a7084857b7b479ed7ab3$__945b8781106118a8575050505050505050565b60636118b382610be3565b0460409081519063cb5cc10960e01b825260049080828401526020928084818d60249485915af4908115611a1d57918b8a8f98979694938f96948c916119d7575b506119189695949261191f89959361192593670de0b6b3a76400009a8b918561154a565b059061137e565b9a61154a565b93885195869384926352c5805d60e11b84528301525af49182156119cd578892611998575b509161196061196792611993989796959461154a565b058961137e565b91519261197384610a42565b8352820152611982828d61161f565b5261198d818c61161f565b506117e5565b611897565b9091508381813d83116119c6575b6119b08183610a7a565b810103126119c257519061196061194a565b8780fd5b503d6119a6565b85513d8a823e3d90fd5b94965050505091938095965081813d8311611a16575b6119f78183610a7a565b810103126119c257518c9594938c93909290918c908b906119186118f4565b503d6119ed565b86513d8a823e3d90fd5b634e487b7160e01b86526011600452602486fd5b9190611a456115ae565b92611a54610100820151611335565b91611a5e8161144c565b9273__$f5dabb00d97932a7084857b7b479ed7ab3$__91611a7e81611462565b936040938451633925b56d60e01b81526004968782015260209460249886838b81875af4928315611ce857600093611cb7575b50611acc611ad49261012092611918620f424096879261154a565b940151611335565b90611ade8561144c565b611ae786611462565b908851916348e5916b60e01b83528a83015287828c81885af4918215611c7b57600092611c86575b5092611b2b92611918611b2593611b309661154a565b946112f5565b61144c565b60005b60648110611b4657505050505050505050565b6063611b5182610be3565b0487516352c5805d60e11b8152818a82015287818c81885af4908115611c7b57600091611c4c575b50611b9a611b9391670de0b6b3a76400009283918761154a565b058761137e565b9189519063cb5cc10960e01b82528b82015288818d81895af4908115611c4157908e9291600091611c0d575b5093809392611be6611bfd93611bdf611c08988a61154a565b058b61137e565b8c5194611bf286610a42565b85528b85015261161f565b5261198d818d61161f565b611b33565b9192508982813d8311611c3a575b611c258183610a7a565b810103126107d65750518d9190611c08611bc6565b503d611c1b565b8a513d6000823e3d90fd5b908882813d8311611c74575b611c628183610a7a565b810103126107d6575051611b9a611b79565b503d611c58565b89513d6000823e3d90fd5b90918882813d8311611cb0575b611c9d8183610a7a565b810103126107d657505190611b2b611b0f565b503d611c93565b90928782813d8311611ce1575b611cce8183610a7a565b810103126107d657505191611acc611ab1565b503d611cc4565b88513d6000823e3d90fd5b919091611cfe6115ae565b926101008201906103e880611d138451611473565b0592516101f49060008282019283129112908015821691151617610c0357611d3a90611473565b05611d4760028307611485565b604051633925b56d60e01b8152600481018590529060208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49182156110315760009261213a575b50611d9a611da092620f42409261154a565b05611347565b6002611dab846112f5565b079060405191633925b56d60e01b835283600484015260208360248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af492831561103157600093612104575b50611918620f4240916116db611e029561149c565b92611e0f60028407611485565b604051916348e5916b60e01b8352600483015260208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4918215611031576000926120ce575b50611d9a611e6092620f42409261154a565b6002611e6b846112f5565b07604051926348e5916b60e01b8452600484015260208360248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af492831561103157600093612098575b50611918620f4240916116db611ec09561149c565b90611eca81611312565b80610fa0810205610fa01481151715610c0357611ef2600491610fa060c08801519102611604565b0592838060640112600116610c035760005b60648112611f1457505050505050565b611f39611f2e611f2385611473565b60c089015190611604565b606361191884611473565b90604051633925b56d60e01b815282600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af490811561103157600091612063575b50620f4240611f8e611f95928960640161154a565b058461137e565b611fab8760640161173061187960028907611436565b92604051906348e5916b60e01b8252600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49081156110315760009161202e575b50620f4240611b93612000926120299661154a565b6040519161200d83610a42565b8252602082015261201e828b61161f565b52611774818a61161f565b611f04565b90506020813d60201161205b575b8161204960209383610a7a565b81010312610b205751620f4240611feb565b3d915061203c565b90506020813d602011612090575b8161207e60209383610a7a565b81010312610b205751620f4240611f79565b3d9150612071565b92506020833d6020116120c6575b816120b360209383610a7a565b81010312610b2057915191611918611eab565b3d91506120a6565b91506020823d6020116120fc575b816120e960209383610a7a565b81010312610b2057905190611d9a611e4e565b3d91506120dc565b92506020833d602011612132575b8161211f60209383610a7a565b81010312610b2057915191611918611ded565b3d9150612112565b91506020823d602011612168575b8161215560209383610a7a565b81010312610b2057905190611d9a611d88565b3d9150612148565b6121786115ae565b916096612184826114ae565b059261010083016121c66121c161219b83516114ae565b9560c06121b86002806121ae88516112f5565b07965107976114c6565b91015190611604565b611359565b60005b606490818112156123be5760636121df82610be3565b60405163cb5cc10960e01b8152919004600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49081156110315760009161238c575b5060206107d061222f846114ae565b0560405194859163657d14d160e01b83528c600484015260248301528a60448301528173__$2af77e0425348cf2cf5810f3ba584fd810$__5af492831561103157600093612358575b5061228d6063612287846114c6565b05611359565b92612298818361154a565b906106a491828102928184051490151715610c03576122d3906122cd670de0b6b3a7640000968762010000809605059061137e565b9361154a565b613a9890818102918183051490151715610c035761168761232361231c8b6116878b61231661230e8d6123539d61232a9b8d9b05059061137e565b998a9261154a565b9261154a565b948961154a565b918a61154a565b6040519161233783610a42565b82526020820152612348828761161f565b52611774818661161f565b6121c9565b90926020823d602011612384575b8161237360209383610a7a565b810103126107d65750519138612278565b3d9150612366565b906020823d6020116123b6575b816123a660209383610a7a565b810103126107d657505138612220565b3d9150612399565b505050509392505050565b9190916123d46115ae565b9261240c6123ec611815606461010086015107611420565b9260c06121b8612406611815606461012086015107611420565b94611473565b604051633925b56d60e01b815260048101829052909160208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49182156110315760009261264f575b506040516348e5916b60e01b8152600481018490529260208460248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49384156110315760009461261b575b5060005b606481126124a457505050505050565b60038181029081058203610c03576124bc908361137e565b6124d3620f42406124cc876114d8565b058861137e565b6124dc836114ea565b604051633925b56d60e01b8152600481018490529060208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4918215611031576000926125e5575b506119186125309392620f42409261154a565b90612548620f4240612541896114d8565b058661137e565b90612552846114ea565b604051916348e5916b60e01b8352600483015260208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4918215611031576000926125ae575b5091620f4240611918612000936125a997969561154a565b612494565b90916020823d6020116125dd575b816125c960209383610a7a565b810103126107d657505190620f4240612591565b3d91506125bc565b90916020823d602011612613575b8161260060209383610a7a565b810103126107d65750519061191861251d565b3d91506125f3565b90936020823d602011612647575b8161263660209383610a7a565b810103126107d65750519238612490565b3d9150612629565b90916020823d60201161267b575b8161266a60209383610a7a565b810103126107d6575051903861244e565b3d915061265d565b801561277a5760009081811380600114612754571561272f575b800290600190815b600181116126ed5750826001600160ff1b03048211818313166126d957808212600160ff1b8490058312166126d957500290565b634e487b7160e01b81526011600452602490fd5b92806001600160ff1b0304811161271b5760018416612712575b80029260011c6126a5565b80920291612707565b634e487b7160e01b82526011600452602482fd5b806001600160ff1b030581121561269d57634e487b7160e01b82526011600452602482fd5b50806001600160ff1b030481111561269d57634e487b7160e01b82526011600452602482fd5b50600090565b91906127ec61278d6115ae565b936064926127a96127a485610100850151076114fb565b61136c565b906127bd6127a486610120860151076114fb565b906127f16101406127db6127d084611473565b60c088015190611604565b9501516116db61012c9788946112f5565b612683565b07809401938412600116610c035773__$f5dabb00d97932a7084857b7b479ed7ab3$__93604091825190633925b56d60e01b8252600494868684015260209360249785858a818d5af494851561299c5790869160009661296a575b50898851809c81936348e5916b60e01b83528c8301525af498891561295f57600099612930575b5060005b8a811261288b575050505050505050505050565b620f42406128a48161289d888661154a565b058561137e565b906128e18c6128c4606394846119188c886128be8b6113d5565b0561154a565b926119186128d682611bdf858b61154a565b92866128be896113d5565b8951916128ed83610a42565b82528882015282820391821161291c57818f6117749261291161291796958361161f565b5261161f565b612877565b8a60118b634e487b7160e01b600052526000fd5b90988582813d8311612958575b6129478183610a7a565b810103126107d65750519738612873565b503d61293d565b86513d6000823e3d90fd5b9182819792973d8311612995575b6129828183610a7a565b810103126107d65750859051943861284c565b503d612978565b87513d6000823e3d90fd5b9190916129b26115ae565b926101008201916129c66118158451611511565b926129e861012083019260c06121b86129e26118158751611511565b96611473565b9073__$f5dabb00d97932a7084857b7b479ed7ab3$__92604093845192633925b56d60e01b84528460048501526020948585602481865af494851561299c57908691600096612be6575b5060248851809581936348e5916b60e01b835260048301525af491821561295f57600092612bb5575b50612a6f612a74612a6f612a7b9351611511565b611791565b9351611511565b9260005b60648112612a9257505050505050505050565b606380612a9e836117ae565b612aa8908c61154a565b0590620f42409182612ab986611527565b05612ac39161137e565b828280612acf87611538565b05612ada908861154a565b612ae3876117ae565b612aec9161154a565b0505612af79161137e565b81612b02888661154a565b05612b0c9161137e565b9181612b17856117ae565b612b21908d61154a565b0581612b2c88611527565b05612b369161137e565b908280612b4287611538565b05612b4d908961154a565b612b56876117ae565b612b5f9161154a565b0505612b6a9161137e565b90612b75888561154a565b05612b7f9161137e565b885191612b8b83610a42565b825287820152612b9b828d61161f565b52612ba6818c61161f565b50612bb09061156d565b612a7f565b90918582813d8311612bdf575b612bcc8183610a7a565b810103126107d657505190612a6f612a5b565b503d612bc2565b9182819792973d8311612c11575b612bfe8183610a7a565b810103126107d657508590519438612a32565b503d612bf4565b90606090600060015b606481106132a95750506040519260c0840184811067ffffffffffffffff821117610a2c576040526000845260006020850152600060408501526000606085015260006080850152600060a085015260a0820151600a81101561163057601482016014811260008412908015821691151617610c03576005612cae60408601926116db845188519061137e565b6040516020810191825260208152612cc581610a42565b519020069060058210156116305777ffffffffffffffffffffffffffffffffffffffffffffffff198260c0603295612d5d9560021c9060011b01549160061b161c60c01b1687526005612d27612d1a866112f5565b6116db845189519061137e565b6040516020810191825260208152612d3e81610a42565b5190200660208801526116db612d53856112f5565b915186519061137e565b6040516020810191825260208152612d7481610a42565b519020068060011c90600119169080820460021490151715610c0357600581029080820460051490151715610c035780604086015260011c600581029080820460051490151715610c0357606085015260408401516032810190818111610c03576060860151019060328201809111610c0357604b820110610c0357604b016080850152610120820151816001019081600111610c0357600691612e1791610bc3565b0661324b575b5050612e386020612e2f855151613480565b94510151613480565b612e4560408401516134f4565b6032612e4f610c2c565b90600a602283015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015612e8657600a9091612e57565b5050612e9560608601516134f4565b91601994612ea1610c2c565b95600a602288015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015612ed857600a9091612ea9565b5050604051977f3c7061746820643d224d0000000000000000000000000000000000000000000060208a0152612f18815180926020602a8d019101610b5f565b880194600b60fa1b9586602a820152612f3b825180936020602b85019101610b5f565b01612f50825180936020602b85019101610b5f565b01601160f91b602b8201527f207374796c653d227374726f6b652d6461736861727261793a20000000000000602c820152612f95825180936020604685019101610b5f565b01836046820152612fb0825180936020604785019101610b5f565b01826047820152612fcb825180936020604885019101610b5f565b01906048820152612fe6825180936020604985019101610b5f565b019061302e605584603b60f81b948560498201527f202d2d6f66667365743a20000000000000000000000000000000000000000000604a820152036035810186520184610a7a565b61303b60808201516134f4565b9277ffffffffffffffffffffffffffffffffffffffffffffffff19825116926020830151926005841015611630576113c1948460c99560041c60140154613092608061308a60a08701516134f4565b9501516134f4565b9460405199876130ac8c995180926020808d019101610b5f565b88016130c18251809360208085019101610b5f565b01938160208601527f207374726f6b653a2000000000000000000000000000000000000000000000006021860152602a85015260328401527f207374726f6b652d77696474683a000000000000000000000000000000000000603384015260f061ffff811b9260041b161c60f01b166041820152602560f81b60438201527f3b2220706174684c656e6774683d2200000000000000000000000000000000006044820152613179825180936020605385019101610b5f565b0161111f60f11b60538201527f3c616e696d617465206174747269627574654e616d653d227374726f6b652d6460558201527f6173686f6666736574222076616c7565733d22303b000000000000000000000060758201526131e5825180936020608a85019101610b5f565b0161011160f51b608a8201527f6475723d223473222063616c634d6f64653d226c696e65617222207265706561608c8201527f74436f756e743d22696e646566696e69746522202f3e3c2f706174683e00000060ac8201520360a9810184520182610a7a565b6132706132696080860151936101406101008201519101519061154a565b9180610c19565b6001019081600111610c0357600f9161328891610bc3565b06600a0180600a11610c035761329d91610c19565b60a08301523880612e1d565b9190926132b6838761161f565b515190602090816132c7868a61161f565b51015160c71980851390816133ed575b816133e3575b50806133d8575b156133c757600b60fa1b94959660001461337f5761330d61330761336e95613480565b91613480565b9060405195836133268895518092888089019101610b5f565b8401604d60f81b8682015282519061334682602195898785019101610b5f565b019182015261335f825180936022968785019101610b5f565b01036002810184520182610a7a565b9161337a6000916117e5565b612c21565b61338e61330761336e95613480565b9060405195836133a78895518092888089019101610b5f565b8401601360fa1b8682015282519061334682602195898785019101610b5f565b50945050509061337a6001916117e5565b5061106881126132e4565b90508113386132dd565b611068861291506132d7565b670de0b6b3a76400008082069104811561347657602161342e67016345785d8a00006134276113c1946134f4565b94046134f4565b926040519381613448869351809260208087019101610b5f565b8201601760f91b60208201526134678251809360208785019101610b5f565b01036001810184520182610a7a565b6113c191506134f4565b6113c160206134c060008412936000856000146134df57506040516134a481610a42565b60018152602d60f81b84820152945b6000906134d957506134f4565b9260405193816110c68693518092868087019101610b5f565b036134f4565b604051906134ec82610a5e565b8152946134b3565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613629575b506d04ee2d6d415b85acef81000000008083101561361a575b50662386f26fc100008083101561360b575b506305f5e100808310156135fc575b50612710808310156135ed575b5060648210156135dd575b600a809210156135d3575b60019081602161358b828701610c46565b95860101905b61359d575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049182156135ce57919082613591565b613596565b916001019161357a565b919060646002910491019161356f565b60049193920491019138613564565b60089193920491019138613557565b60109193920491019138613548565b60209193920491019138613536565b60409350810491503861351d56fea164736f6c6343000813000a";

type VeArtProxyConstructorParams =
  | [linkLibraryAddresses: VeArtProxyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeArtProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VeArtProxy__factory extends ContractFactory {
  constructor(...args: VeArtProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        VeArtProxy__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: VeArtProxyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f5dabb00d97932a7084857b7b479ed7ab3\\$__", "g"),
      linkLibraryAddresses["contracts/art/Trig.sol:Trig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2af77e0425348cf2cf5810f3ba584fd810\\$__", "g"),
      linkLibraryAddresses["contracts/art/PerlinNoise.sol:PerlinNoise"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ve, overrides || {});
  }
  override deploy(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ve, overrides || {}) as Promise<
      VeArtProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VeArtProxy__factory {
    return super.connect(runner) as VeArtProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeArtProxyInterface {
    return new Interface(_abi) as VeArtProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VeArtProxy {
    return new Contract(address, _abi, runner) as unknown as VeArtProxy;
  }
}

export interface VeArtProxyLibraryAddresses {
  ["contracts/art/Trig.sol:Trig"]: string;
  ["contracts/art/PerlinNoise.sol:PerlinNoise"]: string;
}
