/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VeArtProxy,
  VeArtProxyInterface,
} from "../../contracts/VeArtProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "circles",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "corners",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "curves",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "explosion",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "generateConfig",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "interlockingCircles",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "lineArtPathsOnly",
    outputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "spiral",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "twoStripes",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "wormhole",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "$f5dabb00d97932a7084857b7b479ed7ab3$__945b878110611a49575050505050505050565b6063611a5482610d98565b0460409081519063cb5cc10960e01b825260049080828401526020928084818d60249485915af4908115611bbe57918b8a8f98979694938f96948c91611b78575b50611ab996959492611ac0899593611ac693670de0b6b3a76400009a8b918561174c565b0590611591565b9a61174c565b93885195869384926352c5805d60e11b84528301525af4918215611b6e578892611b39575b5091611b01611b0892611b34989796959461174c565b0589611591565b915192611b1484610bc6565b8352820152611b23828d6117c5565b52611b2e818c6117c5565b50611986565b611a38565b9091508381813d8311611b67575b611b518183610bfe565b81010312611b63575190611b01611aeb565b8780fd5b503d611b47565b85513d8a823e3d90fd5b94965050505091938095965081813d8311611bb7575b611b988183610bfe565b81010312611b6357518c9594938c93909290918c908b90611ab9611a95565b503d611b8e565b86513d8a823e3d90fd5b634e487b7160e01b86526011600452602486fd5b9190611be661176f565b92611bf5610100820151611548565b91611bff8161164e565b9273__$f5dabb00d97932a7084857b7b479ed7ab3$__91611c1f81611664565b936040938451633925b56d60e01b81526004968782015260209460249886838b81875af4928315611e8957600093611e58575b50611c6d611c759261012092611ab9620f424096879261174c565b940151611548565b90611c7f8561164e565b611c8886611664565b908851916348e5916b60e01b83528a83015287828c81885af4918215611e1c57600092611e27575b5092611ccc92611ab9611cc693611cd19661174c565b94611508565b61164e565b60005b60648110611ce757505050505050505050565b6063611cf282610d98565b0487516352c5805d60e11b8152818a82015287818c81885af4908115611e1c57600091611ded575b50611d3b611d3491670de0b6b3a76400009283918761174c565b0587611591565b9189519063cb5cc10960e01b82528b82015288818d81895af4908115611de257908e9291600091611dae575b5093809392611d87611d9e93611d80611da9988a61174c565b058b611591565b8c5194611d9386610bc6565b85528b8501526117c5565b52611b2e818d6117c5565b611cd4565b9192508982813d8311611ddb575b611dc68183610bfe565b810103126109695750518d9190611da9611d67565b503d611dbc565b8a513d6000823e3d90fd5b908882813d8311611e15575b611e038183610bfe565b81010312610969575051611d3b611d1a565b503d611df9565b89513d6000823e3d90fd5b90918882813d8311611e51575b611e3e8183610bfe565b8101031261096957505190611ccc611cb0565b503d611e34565b90928782813d8311611e82575b611e6f8183610bfe565b8101031261096957505191611c6d611c52565b503d611e65565b88513d6000823e3d90fd5b919091611e9f61176f565b926101008201906103e880611eb48451611675565b0592516101f49060008282019283129112908015821691151617610d6257611edb90611675565b05611ee860028307611687565b604051633925b56d60e01b8152600481018590529060208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4918215611204576000926122db575b50611f3b611f4192620f42409261174c565b0561155a565b6002611f4c84611508565b079060405191633925b56d60e01b835283600484015260208360248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4928315611204576000936122a5575b50611ab9620f424091611881611fa39561169e565b92611fb060028407611687565b604051916348e5916b60e01b8352600483015260208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49182156112045760009261226f575b50611f3b61200192620f42409261174c565b600261200c84611508565b07604051926348e5916b60e01b8452600484015260208360248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af492831561120457600093612239575b50611ab9620f4240916118816120619561169e565b9061206b81611525565b80610fa0810205610fa01481151715610d6257612093600491610fa060c08801519102610d47565b0592838060640112600116610d625760005b606481126120b557505050505050565b6120da6120cf6120c485611675565b60c089015190610d47565b6063611ab984611675565b90604051633925b56d60e01b815282600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af490811561120457600091612204575b50620f424061212f612136928960640161174c565b0584611591565b61214c876064016118d6611a1a60028907611638565b92604051906348e5916b60e01b8252600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4908115611204576000916121cf575b50620f4240611d346121a1926121ca9661174c565b604051916121ae83610bc6565b825260208201526121bf828b6117c5565b52611915818a6117c5565b6120a5565b90506020813d6020116121fc575b816121ea60209383610bfe565b81010312610ca45751620f424061218c565b3d91506121dd565b90506020813d602011612231575b8161221f60209383610bfe565b81010312610ca45751620f424061211a565b3d9150612212565b92506020833d602011612267575b8161225460209383610bfe565b81010312610ca457915191611ab961204c565b3d9150612247565b91506020823d60201161229d575b8161228a60209383610bfe565b81010312610ca457905190611f3b611fef565b3d915061227d565b92506020833d6020116122d3575b816122c060209383610bfe565b81010312610ca457915191611ab9611f8e565b3d91506122b3565b91506020823d602011612309575b816122f660209383610bfe565b81010312610ca457905190611f3b611f29565b3d91506122e9565b61231961176f565b916096612325826116b0565b0592610100830161236761236261233c83516116b0565b9560c061235960028061234f8851611508565b07965107976116c8565b91015190610d47565b61156c565b60005b6064908181121561255f57606361238082610d98565b60405163cb5cc10960e01b8152919004600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49081156112045760009161252d575b5060206107d06123d0846116b0565b0560405194859163657d14d160e01b83528c600484015260248301528a60448301528173__$2af77e0425348cf2cf5810f3ba584fd810$__5af4928315611204576000936124f9575b5061242e6063612428846116c8565b0561156c565b92612439818361174c565b906106a491828102928184051490151715610d62576124749061246e670de0b6b3a76400009687620100008096050590611591565b9361174c565b613a9890818102918183051490151715610d625761182d6124c46124bd8b61182d8b6124b76124af8d6124f49d6124cb9b8d9b050590611591565b998a9261174c565b9261174c565b948961174c565b918a61174c565b604051916124d883610bc6565b825260208201526124e982876117c5565b5261191581866117c5565b61236a565b90926020823d602011612525575b8161251460209383610bfe565b810103126109695750519138612419565b3d9150612507565b906020823d602011612557575b8161254760209383610bfe565b81010312610969575051386123c1565b3d915061253a565b505050509392505050565b91909161257561176f565b926125ad61258d6119b6606461010086015107611622565b9260c06123596125a76119b6606461012086015107611622565b94611675565b604051633925b56d60e01b815260048101829052909160208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4918215611204576000926127f0575b506040516348e5916b60e01b8152600481018490529260208460248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af4938415611204576000946127bc575b5060005b6064811261264557505050505050565b60038181029081058203610d625761265d9083611591565b612674620f424061266d876116da565b0588611591565b61267d836116ec565b604051633925b56d60e01b8152600481018490529060208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af491821561120457600092612786575b50611ab96126d19392620f42409261174c565b906126e9620f42406126e2896116da565b0586611591565b906126f3846116ec565b604051916348e5916b60e01b8352600483015260208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af49182156112045760009261274f575b5091620f4240611ab96121a19361274a97969561174c565b612635565b90916020823d60201161277e575b8161276a60209383610bfe565b8101031261096957505190620f4240612732565b3d915061275d565b90916020823d6020116127b4575b816127a160209383610bfe565b8101031261096957505190611ab96126be565b3d9150612794565b90936020823d6020116127e8575b816127d760209383610bfe565b810103126109695750519238612631565b3d91506127ca565b90916020823d60201161281c575b8161280b60209383610bfe565b8101031261096957505190386125ef565b3d91506127fe565b801561291b57600090818113806001146128f557156128d0575b800290600190815b6001811161288e5750826001600160ff1b030482118183131661287a57808212600160ff1b84900583121661287a57500290565b634e487b7160e01b81526011600452602490fd5b92806001600160ff1b030481116128bc57600184166128b3575b80029260011c612846565b809202916128a8565b634e487b7160e01b82526011600452602482fd5b806001600160ff1b030581121561283e57634e487b7160e01b82526011600452602482fd5b50806001600160ff1b030481111561283e57634e487b7160e01b82526011600452602482fd5b50600090565b919061298d61292e61176f565b9360649261294a61294585610100850151076116fd565b61157f565b9061295e61294586610120860151076116fd565b9061299261014061297c61297184611675565b60c088015190610d47565b95015161188161012c978894611508565b612824565b07809401938412600116610d625773__$f5dabb00d97932a7084857b7b479ed7ab3$__93604091825190633925b56d60e01b8252600494868684015260209360249785858a818d5af4948515612b3d57908691600096612b0b575b50898851809c81936348e5916b60e01b83528c8301525af4988915612b0057600099612ad1575b5060005b8a8112612a2c575050505050505050505050565b620f4240612a4581612a3e888661174c565b0585611591565b90612a828c612a6560639484611ab98c88612a5f8b6115d7565b0561174c565b92611ab9612a7782611d80858b61174c565b9286612a5f896115d7565b895191612a8e83610bc6565b825288820152828203918211612abd57818f61191592612ab2612ab89695836117c5565b526117c5565b612a18565b8a60118b634e487b7160e01b600052526000fd5b90988582813d8311612af9575b612ae88183610bfe565b810103126109695750519738612a14565b503d612ade565b86513d6000823e3d90fd5b9182819792973d8311612b36575b612b238183610bfe565b81010312610969575085905194386129ed565b503d612b19565b87513d6000823e3d90fd5b919091612b5361176f565b92610100820191612b676119b68451611713565b92612b8961012083019260c0612359612b836119b68751611713565b96611675565b9073__$f5dabb00d97932a7084857b7b479ed7ab3$__92604093845192633925b56d60e01b84528460048501526020948585602481865af4948515612b3d57908691600096612d87575b5060248851809581936348e5916b60e01b835260048301525af4918215612b0057600092612d56575b50612c10612c15612c10612c1c9351611713565b611932565b9351611713565b9260005b60648112612c3357505050505050505050565b606380612c3f8361194f565b612c49908c61174c565b0590620f42409182612c5a86611729565b05612c6491611591565b828280612c708761173a565b05612c7b908861174c565b612c848761194f565b612c8d9161174c565b0505612c9891611591565b81612ca3888661174c565b05612cad91611591565b9181612cb88561194f565b612cc2908d61174c565b0581612ccd88611729565b05612cd791611591565b908280612ce38761173a565b05612cee908961174c565b612cf78761194f565b612d009161174c565b0505612d0b91611591565b90612d16888561174c565b05612d2091611591565b885191612d2c83610bc6565b825287820152612d3c828d6117c5565b52612d47818c6117c5565b50612d51906114c7565b612c20565b90918582813d8311612d80575b612d6d8183610bfe565b8101031261096957505190612c10612bfc565b503d612d63565b9182819792973d8311612db2575b612d9f8183610bfe565b8101031261096957508590519438612bd3565b503d612d95565b6060929091600160005b606482106134f95750506040519260c0840184811067ffffffffffffffff821117610bb0576040526060845260006020850152600060408501526000606085015260006080850152600060a085015260a0820151600a8110156117d657601482016014811260008412908015821691151617610d6257612e4f6005916118816040870151875190611591565b6040516020810191825260208152612e6681610bc6565b519020069060058210156117d6576040519160009080600584020154928360011c9360018116156134ef575b6020851060018216146134db578486528593929190600181169081156134b7575060011461346a575b5050612ec992500382610bfe565b84526005612ee9612ed983611508565b6118816040860151865190611591565b6040516020810191825260208152612f0081610bc6565b5190200660208501526032612f17612ed983611508565b6040516020810191825260208152612f2e81610bc6565b519020068060011c90600119169080820460021490151715610d6257600581029080820460051490151715610d625780604086015260011c600581029080820460051490151715610d6257606085015260408401516032810190818111610d625760608601510160328101809211610d6257604b01809111610d62576080850152610120820151816001019081600111610d6257600691612fce91610d8e565b0661340c575b5050612fef6020612fe683515161364b565b9251015161364b565b612ffc60408401516136bf565b906032613007610dcb565b90600a602283015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561303e57600a909161300f565b505061304d60608601516136bf565b90601993613059610dcb565b94600a602287015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561309057600a9091613061565b505060405197602a6130d38a60208101997f3c7061746820643d224d000000000000000000000000000000000000000000008b5260208151948593019101610ce3565b890194600b60fa1b9586602a8201526130f6825180936020602b85019101610ce3565b0161310b825180936020602b85019101610ce3565b01601160f91b602b8201527f207374796c653d227374726f6b652d6461736861727261793a20000000000000602c820152613150825180936020604685019101610ce3565b0183604682015261316b825180936020604785019101610ce3565b01826047820152613186825180936020604885019101610ce3565b019060488201526131a1825180936020604985019101610ce3565b01926131e9605582603b60f81b968760498201527f202d2d6f66667365743a20000000000000000000000000000000000000000000604a820152036035810184520182610bfe565b6131f660808401516136bf565b9183519360208101519360058510156117d65761325e966115d49661322f60ff8860f860c29a60051c603201549160031b161c166136bf565b9261324a608061324260a08801516136bf565b9601516136bf565b956040519a8b9851809260208b0190610ce3565b87016132738251809360208085019101610ce3565b018260208201527f207374726f6b653a20000000000000000000000000000000000000000000000060218201526132b4825180936020602a85019101610ce3565b0190602a8201527f207374726f6b652d77696474683a20302e000000000000000000000000000000602b8201526132f5825180936020603c85019101610ce3565b01602560f81b603c8201527f3b2220706174684c656e6774683d220000000000000000000000000000000000603d82015261333a825180936020604c85019101610ce3565b0161111f60f11b604c8201527f3c616e696d617465206174747269627574654e616d653d227374726f6b652d64604e8201527f6173686f6666736574222076616c7565733d22303b0000000000000000000000606e8201526133a6825180936020608385019101610ce3565b0161011160f51b60838201527f6475723d223473222063616c634d6f64653d226c696e6561722220726570656160858201527f74436f756e743d22696e646566696e69746522202f3e3c2f706174683e00000060a58201520360a2810184520182610bfe565b61343161342a6080860151936101406101008201519101519061174c565b9180610db8565b6001019081600111610d6257600f9161344991610d8e565b06600a0180600a11610d625761345e91610db8565b60a08301523880612fd4565b600591925093929302016000526020600020906000915b81831061349b575050906020612ec9928201013880612ebb565b6020919350806001915483858801015201910190918392613481565b91505060209250612ec994915060ff191682840152151560051b8201013880612ebb565b634e487b7160e01b84526022600452602484fd5b93607f1693612e92565b61350682859793976117c5565b5151916020918261351789886117c5565b5101519060c719808613908161363f575b81613635575b508061362a575b1561361957600b60fa1b9493929190156135d15761355e6135586135bf9561364b565b9161364b565b9060405195836135778895518092888089019101610ce3565b8401604d60f81b8682015282519061359782602195898785019101610ce3565b01918201526135b0825180936022968785019101610ce3565b01036002810184520182610bfe565b936135cb600091611986565b90612dc3565b6135e06135586135bf9561364b565b9060405195836135f98895518092888089019101610ce3565b8401601360fa1b8682015282519061359782602195898785019101610ce3565b5050959150506135cb600191611986565b506110688212613535565b905082133861352e565b61106887129150613528565b6115d4602061368b60008412936000856000146136aa575060405161366f81610bc6565b60018152602d60f81b84820152945b6000906136a457506136bf565b9260405193816112988693518092868087019101610ce3565b036136bf565b604051906136b782610be2565b81529461367e565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000808210156137f4575b506d04ee2d6d415b85acef8100000000808310156137e5575b50662386f26fc10000808310156137d6575b506305f5e100808310156137c7575b50612710808310156137b8575b5060648210156137a8575b600a8092101561379e575b600190816021613756828701610de5565b95860101905b613768575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049182156137995791908261375c565b613761565b9160010191613745565b919060646002910491019161373a565b6004919392049101913861372f565b60089193920491019138613722565b60109193920491019138613713565b60209193920491019138613701565b6040935081049150386136e856fea164736f6c6343000813000a";

type VeArtProxyConstructorParams =
  | [linkLibraryAddresses: VeArtProxyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeArtProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VeArtProxy__factory extends ContractFactory {
  constructor(...args: VeArtProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        VeArtProxy__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: VeArtProxyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f5dabb00d97932a7084857b7b479ed7ab3\\$__", "g"),
      linkLibraryAddresses["contracts/art/Trig.sol:Trig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2af77e0425348cf2cf5810f3ba584fd810\\$__", "g"),
      linkLibraryAddresses["contracts/art/PerlinNoise.sol:PerlinNoise"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ve, overrides || {});
  }
  override deploy(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ve, overrides || {}) as Promise<
      VeArtProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VeArtProxy__factory {
    return super.connect(runner) as VeArtProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeArtProxyInterface {
    return new Interface(_abi) as VeArtProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VeArtProxy {
    return new Contract(address, _abi, runner) as unknown as VeArtProxy;
  }
}

export interface VeArtProxyLibraryAddresses {
  ["contracts/art/Trig.sol:Trig"]: string;
  ["contracts/art/PerlinNoise.sol:PerlinNoise"]: string;
}
