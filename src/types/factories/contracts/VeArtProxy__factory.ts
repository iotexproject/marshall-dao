/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VeArtProxy,
  VeArtProxyInterface,
} from "../../contracts/VeArtProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "circles",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "corners",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "curves",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "explosion",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "generateConfig",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "interlockingCircles",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "lineArtPathsOnly",
    outputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "spiral",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "twoStripes",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "_tokenId",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_balanceOf",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedEnd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "_lockedAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shape",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "palette",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "maxLines",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "dash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed1",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed2",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "seed3",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Config",
        name: "cfg",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "l",
        type: "int256",
      },
    ],
    name: "wormhole",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "x",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "y",
            type: "int256",
          },
        ],
        internalType: "struct IVeArtProxy.Point[100]",
        name: "Line",
        type: "tuple[100]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034620009d257601f6200424138819003918201601f19168301916001600160401b03831184841017620009a657808492602094604052833981010312620009d257516001600160a01b03811690819003620009d25760405161014081016001600160401b03811182821017620009a6576040526200007e620009d7565b62000088620009f7565b906007918281526611a31aa319a29b60c91b60208201528152620000ab620009f7565b8281526611a222222121a360c91b60208201526020820152620000cd620009f7565b828152662343364335424160c81b60208201526040820152620000ef620009f7565b8281526611a118a118209b60c91b6020820152606082015262000111620009f7565b828152662339443942393360c81b60208201526080820152825262000135620009d7565b6200013f620009f7565b90828252660234646313130360cc1b91826020820152815262000161620009f7565b8381526611a29b1823181960c91b6020820152602082015262000183620009f7565b8381526608d0d18c118c0d60ca1b60208201526040820152620001a5620009f7565b8381526611a11c9822981b60c91b60208201526060820152620001c7620009f7565b838152662341343044303960c81b602082015260808201526020840152620001ee620009d7565b620001f8620009f7565b9083825266119ca1a0a2232360c91b9182602082015281526200021a620009f7565b84815266119c221ca1a29b60c91b602082015260208201526200023c620009f7565b84815266119ba29c21a1a360c91b602082015260408201526200025e620009f7565b848152660466e626e8884760cb1b6020820152606082015262000280620009f7565b848152662336343645413360c81b602082015260808201526040850152620002a7620009d7565b90620002b2620009f7565b918483526611981a1999a32360c91b928360208201528152620002d4620009f7565b8581526611981a1922a29b60c91b60208201526020820152620002f6620009f7565b8581526611981a191ca1a360c91b6020820152604082015262000318620009f7565b858152660466066646a84760cb1b602082015260608201526200033a620009f7565b858152662330323231413360c81b60208201526080820152606086015262000361620009d7565b6200036b620009f7565b8581526611a318a2a1a29960c91b602082015281526200038a620009f7565b858152662344414436434560c81b60208201526020820152620003ac620009f7565b858152662343344330424360c81b60208201526040820152620003ce620009f7565b858152662338453843384560c81b60208201526060820152620003f0620009f7565b858152662337453744383160c81b60208201526080820152608086015262000417620009d7565b62000421620009f7565b8581526611a29b9b231a2160c91b6020820152815262000440620009f7565b858152662344303634343360c81b6020820152602082015262000462620009f7565b858152662342423541334360c81b6020820152604082015262000484620009f7565b8581526611a09b9a98199b60c91b60208201526060820152620004a6620009f7565b858152660233934343733360cc1b6020820152608082015260a0860152620004cd620009d7565b92620004d8620009f7565b9085825260208201528352620004ed620009f7565b8481526611a19ca218231960c91b602082015260208401526200050f620009f7565b908482526020820152604083015262000527620009f7565b90838252602082015260608201526200053f620009f7565b8281526608cc10cc110c5160ca1b6020820152608082015260c083015262000566620009d7565b62000570620009f7565b828152662337373538374160c81b602082015281526200058f620009f7565b828152662336423530364560c81b60208201526020820152620005b1620009f7565b828152662336303437363360c81b60208201526040820152620005d3620009f7565b828152660466a6c68606a760cb1b60208201526060820152620005f5620009f7565b828152662334433338344560c81b6020820152608082015260e08301526200061c620009d7565b62000626620009f7565b828152662331313045303760c81b6020820152815262000645620009f7565b828152660466284646a66760cb1b6020820152602082015262000667620009f7565b828152662330323036313760c81b6020820152604082015262000689620009f7565b828152662330313035313360c81b60208201526060820152620006ab620009f7565b828152660233030303030360cc1b60208201526080820152610100830152620006d3620009d7565b90620006de620009f7565b818152662342353843384360c81b60208201528252620006fd620009f7565b818152662341433835383560c81b602082015260208301526200071f620009f7565b818152662339413737373760c81b6020820152604083015262000741620009f7565b818152662338413641364160c81b6020820152606083015262000763620009f7565b908152662337413545354560c81b60208201526080820152610120820152600090815b600a81106200082157836200079a620009d7565b600081526002602082015260026040820152600590816060820152816080820152600091825b818110620007f857505050603255608052604051613829908162000a188239608051818181610b6c0152818161103101526110840152f35b909192602060019160ff9081875116918560031b92831b921b19161794019101919091620007c0565b819293915193806000955b6005871015620009bc57805180519091906001600160401b038111620009a6578354926001938481811c911680156200099b575b60208210146200098557601f811162000935575b50602090601f8311600114620008c45791806001959492602094600092620008b8575b5050600019600383901b1c191690841b1785555b019201960195906200082c565b01519050388062000897565b90601f198316918660005260206000209260005b8181106200091e575092869593928592602096600199951062000904575b505050811b018555620008ab565b015160001960f88460031b161c19169055388080620008f6565b8284015185559387019360209384019301620008d8565b856000526020600020601f840160051c810191602085106200097a575b601f0160051c019085905b8281106200096d57505062000874565b600081550185906200095d565b909150819062000952565b634e487b7160e01b600052602260045260246000fd5b90607f169062000860565b634e487b7160e01b600052604160045260246000fd5b5092945060050192602001915060010162000786565b600080fd5b6040519060a082016001600160401b03811183821017620009a657604052565b60408051919082016001600160401b03811183821017620009a65760405256fe60406080815260048036101561001457600080fd5b6000803560e01c80631e7a79c414610b905780631f85071614610b3f57806334ef880c14610b225780635d32636714610b05578063751ee4d114610ae857806376a07fbb14610acb5780638165ae8514610aae5780638e1ba1a314610a915780639108138b14610a69578063990379fa146109d9578063a707e80d146109865763c87b56dd146100a357600080fd5b34610983576020918260031936011261097f576100c08135610fa0565b906101ba6100cd8361125c565b6101b56096885180937f3c737667207072657365727665417370656374526174696f3d22784d696e594d8a8301527f696e206d656574222076696577426f783d2230203020343030302034303030228b8301527f2066696c6c3d226e6f6e652220786d6c6e733d22687474703a2f2f7777772e7760608301527f332e6f72672f323030302f737667223e00000000000000000000000000000000608083015261017f815180928c609086019101610cfd565b81017f3c2f7376673e00000000000000000000000000000000000000000000000000006090820152036076810184520182610c18565b610e31565b928583015180156000146106ed575050506106af916101b561011783606061064f950151156000146106b35787516101f181610be0565b600981527f224578706972656422000000000000000000000000000000000000000000000088820152905b885190605d60f81b898084019361045f8d607b60f81b978888527f2274726169745f74797065223a2022556e6c6f636b2044617465222c0000000060218501527f2276616c7565223a2000000000000000000000000000000000000000000000009081603d8601526102978151809288604689019101610cfd565b84016102ba604886611f4b60f21b93846046820152036028810188520186610c18565b85880190886102f46102ef6102e8670de0b6b3a764000060606102df82895105613665565b95015105613665565b94516114f5565b613665565b9451966103098989019c8d9251928391610cfd565b87018c898201527f2274726169745f74797065223a2022566f74696e6720506f776572222c000000602182015284603e82015261034f825180938b604785019101610cfd565b019060478201528a60498201527f2274726169745f74797065223a20224c6f636b656420494f5458222c2276616c604a8201527f7565223a20000000000000000000000000000000000000000000000000000000606a8201526103bb8251809389606f85019101610cfd565b0190627d2c7b60e81b606f8301527f22646973706c61795f74797065223a20226e756d626572222c0000000000000060728301527f2274726169745f74797065223a20224e756d626572206f662044696769747322608b830152600b60fa1b60ab83015260ac820152610437825180938760b585019101610cfd565b019461045960b684607d60f81b988960b5820152036096810186520184610c18565b51613665565b988d51998a97848901527f226e616d65223a20226c6f636b2023000000000000000000000000000000000060218901526104a2815180928660308c019101610cfd565b87019061088b60f21b918260308201527f226261636b67726f756e645f636f6c6f72223a2022313231613236222c00000060328201527f226465736372697074696f6e223a20224d61727368616c6c2044414f20697320604f8201527f6120446563656e7472616c697a6564204175746f6e6f6d6f7573204f7267616e606f8201527f697a6174696f6e202844414f2920746861742077696c6c20656d706c6f792061608f8201527f20766f74652d657363726f77206f6e2d636861696e20676f7665726e616e636560af8201527f2070726f746f636f6c2e222c000000000000000000000000000000000000000060cf8201527f22696d6167655f64617461223a2022646174613a696d6167652f7376672b786d60db8201527f6c3b6261736536342c000000000000000000000000000000000000000000000060fb8201526105f782518093610104978885019101610cfd565b01928301527f2261747472696275746573223a205b00000000000000000000000000000000006101068301525190610636826101159687840190610cfd565b01928301526101168201520360f7810184520182610c18565b926106a0603d825180967f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008783015261069081518092898686019101610cfd565b810103601d810187520185610c18565b51928284938452830190610d20565b0390f35b87516106be81610be0565b600b81527f225065726d616e656e7422000000000000000000000000000000000000000000888201529061021c565b62015180900462010bd990818101918212838212908015821691151617610959576226496501908262253d8c8312911290801582169115161761096c578060021b9083820581036109595762023ab180920591828102908105830361094657600381019084600383129112908015821691151617610946579084610772920590611987565b62164b0961078761078283611522565b6115f1565b05906105b582810290810583036109335790856107a5920590611987565b90601f82019184601f841291129080158216911516176109465781605002916050830581036109335761098f809305928381029081058403610920579060506107ef920590611987565b92600b8305926002810190866002831291129080158216911516176109205783600c0290600c8205850361090d579061082791611987565b9460301982019182136001166108fa575060246106af98968a6101b5978d6101179861088461087e61087861064f9f9b6108739061086e6108e09d61086e6108f49e611603565b6115ab565b6136d9565b946136d9565b916136d9565b9151978894601160f91b9485828801526108a7815180928460218b019101610cfd565b860192602d60f81b938460218201526108c98251809385602285019101610cfd565b019260228401528351938491602385019101610cfd565b019060238201520390810184520182610c18565b9061021c565b634e487b7160e01b815260118752602490fd5b634e487b7160e01b875260118852602487fd5b634e487b7160e01b865260118752602486fd5b634e487b7160e01b855260118652602485fd5b634e487b7160e01b845260118552602484fd5b634e487b7160e01b835260118452602483fd5b506011602492634e487b7160e01b835252fd5b5080fd5b80fd5b50903461097f576020918260031936011261098357506109b16109ac6106af9235610fa0565b61125c565b926106a0838251866109cc8298518092858086019101610cfd565b8101038087520185610c18565b5082903461098357602036600319011261098357506109fb6101609235610fa0565b81519181518352602082015160208401528082015190830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201519083015261012080820151908301526101408091015190820152f35b50823461097f576106af90610a86610a8036610c3a565b90612b62565b905191829182610cc3565b50823461097f576106af90610a86610aa836610c3a565b9061293b565b50823461097f576106af90610a86610ac536610c3a565b9061232b565b50823461097f576106af90610a86610ae236610c3a565b90611eae565b50823461097f576106af90610a86610aff36610c3a565b90612584565b50823461097f576106af90610a86610b1c36610c3a565b90611bf6565b50823461097f576106af90610a86610b3936610c3a565b90611806565b50823461097f578160031936011261097f576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50823461097f576106af90610a86610ba736610c3a565b906119af565b610160810190811067ffffffffffffffff821117610bca57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610bca57604052565b6020810190811067ffffffffffffffff821117610bca57604052565b90601f8019910116810190811067ffffffffffffffff821117610bca57604052565b600319016101808112610cbe5761016013610cbe57604051610c5b81610bad565b6004358152602435602082015260443560408201526064356060820152608435608082015260a43560a082015260c43560c082015260e43560e0820152610104356101008201526101243561012082015261014435610140820152906101643590565b600080fd5b611900810192916000915b60648310610cdb57505050565b6001906040835191825181526020809301518382015201920192019190610cce565b60005b838110610d105750506000910152565b8181015183820152602001610d00565b90602091610d3981518092818552858086019101610cfd565b601f01601f1916010190565b67ffffffffffffffff8111610bca57601f01601f191660200190565b8115610d9257600160ff1b8114600019831416610d7c570590565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b8115610d92570490565b906f04ba18f3fc48fe62e223dce2e33000009180830292830403610d7c57565b81810292918115918404141715610d7c57565b60405190610df282610be0565b6002825260203681840137565b90610e0982610d45565b610e166040519182610c18565b8281528092610e27601f1991610d45565b0190602036910137565b805115610f8c576040516060810181811067ffffffffffffffff821117610bca57604052604081527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f60408201528151600292838201809211610d7c5760038092047f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81168103610d7c57610eef908594951b610dff565b936020850193829183518401925b838110610f3b5750505050510680600114610f2857600214610f1d575090565b603d90600019015390565b50603d9081600019820153600119015390565b85600491979293949701918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151878201530195929190610efd565b50604051610f9981610bfc565b6000815290565b90604051610fad81610bad565b60006020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e08201526000610100820152600061012082015260006101408201528092808252604051637028a55d60e11b815281600482015242602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561121e5760009161122a575b506020830152604051635a2d1e0760e11b8152600481018290526060816024817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff165afa90811561121e576000916111a3575b506020810151604084015251600f0b606083015260086110e9826115c7565b076080830152600a60405160208101908382526020815261110981610be0565b5190200660a083015261111f60208301516114f5565b8060011b600281058203610d7c57600290911261119b575b60c0830152611145816115c7565b610100830152670de0b6b3a764000080820282159183820414821715610d7c5761116e906115c7565b610120840152671bc16d674ec80000808302928304141715610d7c57611196610140916115c7565b910152565b506000611137565b90506060813d606011611216575b816111be60609383610c18565b81010312610cbe57604051906060820182811067ffffffffffffffff821117610bca5760405280519081600f0b8203610cbe5760409183526020810151602084015201518015158103610cbe576040820152386110ca565b3d91506111b1565b6040513d6000823e3d90fd5b90506020813d602011611254575b8161124560209383610c18565b81010312610cbe575138611062565b3d9150611238565b90608082015180156000146112e35750600060605b60c08401518212156112de576112d8906112d261129861129185886119af565b8786612dd3565b91604051809382516112b281602095868087019101610cfd565b82016112c682518093868085019101610cfd565b01038084520182610c18565b916114e1565b90611271565b925050565b9091600191828103611342575090606091816000925b611304575b50505090565b90919260c083015184121561133c576113349061132e6112986113278787611806565b8688612dd3565b936114e1565b9190806112f9565b926112fe565b60028103611389575090606091816000925b61135e5750505090565b90919260c083015184121561133c576113819061132e6112986113278787611bf6565b919080611354565b600381036113d0575090606091816000925b6113a55750505090565b90919260c083015184121561133c576113c89061132e6112986113278787611eae565b91908061139b565b60048103611417575090606091816000925b6113ec5750505090565b90919260c083015184121561133c5761140f9061132e611298611327878761232b565b9190806113e2565b6005810361145e575090606091816000925b6114335750505090565b90919260c083015184121561133c576114569061132e6112986113278787612584565b919080611429565b6006036114a35790606091816000925b6114785750505090565b90919260c083015184121561133c5761149b9061132e611298611327878761293b565b91908061146e565b90606091816000925b6114b65750505090565b90919260c083015184121561133c576114d99061132e6112986113278787612b62565b9190806114ac565b6001600160ff1b038114610d7c5760010190565b90670de0b6b3a764000060009204805b61150c5750565b91600a61151c93049283916114e1565b92611505565b9060018201916000600184129112908015821691151617610d7c57565b9081600101918212600116610d7c57565b90816101f401918212600116610d7c57565b90816105dc01918212600116610d7c57565b90816107d001918212600116610d7c57565b90816063190191821215600116610d7c57565b90816103e801918212600116610d7c57565b91909160008382019384129112908015821691151617610d7c57565b6103e76115ee9160405160208101918252602081526115e581610be0565b5190200661153f565b90565b90610fa09180830292830503610d7c57565b9081606402916064830503610d7c57565b906104e291828102928184051490151715610d7c57565b9081602902916029830503610d7c57565b90601e820291808305601e1490151715610d7c57565b908160011b9180830560021490151715610d7c57565b90606482029180830560641490151715610d7c57565b9081605a0291605a830503610d7c57565b906101689180830292830503610d7c57565b906104b091828102928184051490151715610d7c57565b906104b09180830292830503610d7c57565b908160101b91808305620100001490151715610d7c57565b906110689180830292830503610d7c57565b906101459180830292830503610d7c57565b9081602802916028830503610d7c57565b90601482029180830560141490151715610d7c57565b90600382029180830560031490151715610d7c57565b908160fa029160fa830503610d7c57565b906113889180830292830503610d7c57565b818102929160008212600160ff1b821416610d7c578184051490151715610d7c57565b604090815191610c809081840184811067ffffffffffffffff821117610bca57815283600091825b8481106117bf575050505050565b60209082516117cd81610be0565b858152858382015281850152016117b1565b9060648110156117f05760051b0190565b634e487b7160e01b600052603260045260246000fd5b919091611811611789565b92610140820151908160c801918212600116610d7c5761185661184d61183683611614565b9361184760c0870195865190610d61565b906115ab565b60028307611766565b600261186183611522565b0791610120850151928361089801938412600116610d7c5761189b6118a1946118476101009761189361184796611614565b905190610d61565b90611766565b91015160026118b281830792611522565b07916118c86118c18284611766565b9184611766565b9060005b606481126118db575050505050565b806118f58361086e886118f06119359661162b565b611766565b6119068561086e886118f08661162b565b6040519161191383610be0565b82526020820152611924828a6117df565b5261192f81896117df565b506114e1565b6118cc565b906000198201918213600116610d7c57565b90610dac60008382039312818412811691841390151617610d7c57565b906000826063039212606383128116906063841390151617610d7c57565b81810392916000138015828513169184121617610d7c57565b6000198114610d7c5760010190565b9190916119ba611789565b9260646119d56119d0826101008601510761163c565b611550565b9160fa6101406119ee6119d0856101208901510761163c565b950151079360fa850160fa81126000809712908015821691151617611be257611a346002611a2d611a3993611847611a28889b999b61153f565b611603565b9407611652565b61193a565b938373__$f5dabb00d97932a7084857b7b479ed7ab3$__945b878110611a63575050505050505050565b6063611a6e82610db2565b0460409081519063cb5cc10960e01b825260049080828401526020928084818d60249485915af4908115611bd857918b8a8f98979694938f96948c91611b92575b50611ad396959492611ada899593611ae093670de0b6b3a76400009a8b9185611766565b05906115ab565b9a611766565b93885195869384926352c5805d60e11b84528301525af4918215611b88578892611b53575b5091611b1b611b2292611b4e9897969594611766565b05896115ab565b915192611b2e84610be0565b8352820152611b3d828d6117df565b52611b48818c6117df565b506119a0565b611a52565b9091508381813d8311611b81575b611b6b8183610c18565b81010312611b7d575190611b1b611b05565b8780fd5b503d611b61565b85513d8a823e3d90fd5b94965050505091938095965081813d8311611bd1575b611bb28183610c18565b81010312611b7d57518c9594938c93909290918c908b90611ad3611aaf565b503d611ba8565b86513d8a823e3d90fd5b634e487b7160e01b86526011600452602486fd5b9190611c00611789565b92611c0f610100820151611562565b91611c1981611668565b9273__$f5dabb00d97932a7084857b7b479ed7ab3$__91611c398161167e565b936040938451633925b56d60e01b81526004968782015260209460249886838b81875af4928315611ea357600093611e72575b50611c87611c8f9261012092611ad3620f4240968792611766565b940151611562565b90611c9985611668565b611ca28661167e565b908851916348e5916b60e01b83528a83015287828c81885af4918215611e3657600092611e41575b5092611ce692611ad3611ce093611ceb96611766565b94611522565b611668565b60005b60648110611d0157505050505050505050565b6063611d0c82610db2565b0487516352c5805d60e11b8152818a82015287818c81885af4908115611e3657600091611e07575b50611d55611d4e91670de0b6b3a764000092839187611766565b05876115ab565b9189519063cb5cc10960e01b82528b82015288818d81895af4908115611dfc57908e9291600091611dc8575b5093809392611da1611db893611d9a611dc3988a611766565b058b6115ab565b8c5194611dad86610be0565b85528b8501526117df565b52611b48818d6117df565b611cee565b9192508982813d8311611df5575b611de08183610c18565b810103126109835750518d9190611dc3611d81565b503d611dd6565b8a513d6000823e3d90fd5b908882813d8311611e2f575b611e1d8183610c18565b81010312610983575051611d55611d34565b503d611e13565b89513d6000823e3d90fd5b90918882813d8311611e6b575b611e588183610c18565b8101031261098357505190611ce6611cca565b503d611e4e565b90928782813d8311611e9c575b611e898183610c18565b8101031261098357505191611c87611c6c565b503d611e7f565b88513d6000823e3d90fd5b919091611eb9611789565b926101008201906103e880611ece845161168f565b0592516101f49060008282019283129112908015821691151617610d7c57611ef59061168f565b05611f02600283076116a1565b604051633925b56d60e01b8152600481018590529060208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af491821561121e576000926122f5575b50611f55611f5b92620f424092611766565b05611574565b6002611f6684611522565b079060405191633925b56d60e01b835283600484015260208360248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af492831561121e576000936122bf575b50611ad3620f42409161189b611fbd956116b8565b92611fca600284076116a1565b604051916348e5916b60e01b8352600483015260208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af491821561121e57600092612289575b50611f5561201b92620f424092611766565b600261202684611522565b07604051926348e5916b60e01b8452600484015260208360248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af492831561121e57600093612253575b50611ad3620f42409161189b61207b956116b8565b906120858161153f565b80610fa0810205610fa01481151715610d7c576120ad600491610fa060c08801519102610d61565b0592838060640112600116610d7c5760005b606481126120cf57505050505050565b6120f46120e96120de8561168f565b60c089015190610d61565b6063611ad38461168f565b90604051633925b56d60e01b815282600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af490811561121e5760009161221e575b50620f42406121496121509289606401611766565b05846115ab565b612166876064016118f0611a3460028907611652565b92604051906348e5916b60e01b8252600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af490811561121e576000916121e9575b50620f4240611d4e6121bb926121e496611766565b604051916121c883610be0565b825260208201526121d9828b6117df565b5261192f818a6117df565b6120bf565b90506020813d602011612216575b8161220460209383610c18565b81010312610cbe5751620f42406121a6565b3d91506121f7565b90506020813d60201161224b575b8161223960209383610c18565b81010312610cbe5751620f4240612134565b3d915061222c565b92506020833d602011612281575b8161226e60209383610c18565b81010312610cbe57915191611ad3612066565b3d9150612261565b91506020823d6020116122b7575b816122a460209383610c18565b81010312610cbe57905190611f55612009565b3d9150612297565b92506020833d6020116122ed575b816122da60209383610c18565b81010312610cbe57915191611ad3611fa8565b3d91506122cd565b91506020823d602011612323575b8161231060209383610c18565b81010312610cbe57905190611f55611f43565b3d9150612303565b612333611789565b91609661233f826116ca565b0592610100830161238161237c61235683516116ca565b9560c06123736002806123698851611522565b07965107976116e2565b91015190610d61565b611586565b60005b6064908181121561257957606361239a82610db2565b60405163cb5cc10960e01b8152919004600482015260208160248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af490811561121e57600091612547575b5060206107d06123ea846116ca565b0560405194859163657d14d160e01b83528c600484015260248301528a60448301528173__$2af77e0425348cf2cf5810f3ba584fd810$__5af492831561121e57600093612513575b506124486063612442846116e2565b05611586565b926124538183611766565b906106a491828102928184051490151715610d7c5761248e90612488670de0b6b3a764000096876201000080960505906115ab565b93611766565b613a9890818102918183051490151715610d7c576118476124de6124d78b6118478b6124d16124c98d61250e9d6124e59b8d9b0505906115ab565b998a92611766565b92611766565b9489611766565b918a611766565b604051916124f283610be0565b8252602082015261250382876117df565b5261192f81866117df565b612384565b90926020823d60201161253f575b8161252e60209383610c18565b810103126109835750519138612433565b3d9150612521565b906020823d602011612571575b8161256160209383610c18565b81010312610983575051386123db565b3d9150612554565b505050509392505050565b91909161258f611789565b926125c76125a76119d060646101008601510761163c565b9260c06123736125c16119d060646101208601510761163c565b9461168f565b604051633925b56d60e01b815260048101829052909160208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af491821561121e5760009261280a575b506040516348e5916b60e01b8152600481018490529260208460248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af493841561121e576000946127d6575b5060005b6064811261265f57505050505050565b60038181029081058203610d7c5761267790836115ab565b61268e620f4240612687876116f4565b05886115ab565b61269783611706565b604051633925b56d60e01b8152600481018490529060208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af491821561121e576000926127a0575b50611ad36126eb9392620f424092611766565b90612703620f42406126fc896116f4565b05866115ab565b9061270d84611706565b604051916348e5916b60e01b8352600483015260208260248173__$f5dabb00d97932a7084857b7b479ed7ab3$__5af491821561121e57600092612769575b5091620f4240611ad36121bb93612764979695611766565b61264f565b90916020823d602011612798575b8161278460209383610c18565b8101031261098357505190620f424061274c565b3d9150612777565b90916020823d6020116127ce575b816127bb60209383610c18565b8101031261098357505190611ad36126d8565b3d91506127ae565b90936020823d602011612802575b816127f160209383610c18565b81010312610983575051923861264b565b3d91506127e4565b90916020823d602011612836575b8161282560209383610c18565b810103126109835750519038612609565b3d9150612818565b8015612935576000908181138060011461290f57156128ea575b800290600190815b600181116128a85750826001600160ff1b030482118183131661289457808212600160ff1b84900583121661289457500290565b634e487b7160e01b81526011600452602490fd5b92806001600160ff1b030481116128d657600184166128cd575b80029260011c612860565b809202916128c2565b634e487b7160e01b82526011600452602482fd5b806001600160ff1b030581121561285857634e487b7160e01b82526011600452602482fd5b50806001600160ff1b030481111561285857634e487b7160e01b82526011600452602482fd5b50600090565b91906129a7612948611789565b9360649261296461295f8561010085015107611717565b611599565b9061297861295f8661012086015107611717565b906129ac61014061299661298b8461168f565b60c088015190610d61565b95015161189b61012c978894611522565b61283e565b07809401938412600116610d7c5773__$f5dabb00d97932a7084857b7b479ed7ab3$__93604091825190633925b56d60e01b8252600494868684015260209360249785858a818d5af4948515612b5757908691600096612b25575b50898851809c81936348e5916b60e01b83528c8301525af4988915612b1a57600099612aeb575b5060005b8a8112612a46575050505050505050505050565b620f4240612a5f81612a588886611766565b05856115ab565b90612a9c8c612a7f60639484611ad38c88612a798b6115f1565b05611766565b92611ad3612a9182611d9a858b611766565b9286612a79896115f1565b895191612aa883610be0565b825288820152828203918211612ad757818f61192f92612acc612ad29695836117df565b526117df565b612a32565b8a60118b634e487b7160e01b600052526000fd5b90988582813d8311612b13575b612b028183610c18565b810103126109835750519738612a2e565b503d612af8565b86513d6000823e3d90fd5b9182819792973d8311612b50575b612b3d8183610c18565b8101031261098357508590519438612a07565b503d612b33565b87513d6000823e3d90fd5b919091612b6d611789565b92610100820191612b816119d0845161172d565b92612ba361012083019260c0612373612b9d6119d0875161172d565b9661168f565b9073__$f5dabb00d97932a7084857b7b479ed7ab3$__92604093845192633925b56d60e01b84528460048501526020948585602481865af4948515612b5757908691600096612da1575b5060248851809581936348e5916b60e01b835260048301525af4918215612b1a57600092612d70575b50612c2a612c2f612c2a612c36935161172d565b61194c565b935161172d565b9260005b60648112612c4d57505050505050505050565b606380612c5983611969565b612c63908c611766565b0590620f42409182612c7486611743565b05612c7e916115ab565b828280612c8a87611754565b05612c959088611766565b612c9e87611969565b612ca791611766565b0505612cb2916115ab565b81612cbd8886611766565b05612cc7916115ab565b9181612cd285611969565b612cdc908d611766565b0581612ce788611743565b05612cf1916115ab565b908280612cfd87611754565b05612d089089611766565b612d1187611969565b612d1a91611766565b0505612d25916115ab565b90612d308885611766565b05612d3a916115ab565b885191612d4683610be0565b825287820152612d56828d6117df565b52612d61818c6117df565b50612d6b906114e1565b612c3a565b90918582813d8311612d9a575b612d878183610c18565b8101031261098357505190612c2a612c16565b503d612d7d565b9182819792973d8311612dcc575b612db98183610c18565b8101031261098357508590519438612bed565b503d612daf565b6060929091600160005b606482106135135750506040519260c0840184811067ffffffffffffffff821117610bca576040526060845260006020850152600060408501526000606085015260006080850152600060a085015260a0820151600a8110156117f057601482016014811260008412908015821691151617610d7c57612e6960059161189b60408701518751906115ab565b6040516020810191825260208152612e8081610be0565b519020069060058210156117f0576040519160009080600584020154928360011c936001811615613509575b6020851060018216146134f5578486528593929190600181169081156134d15750600114613484575b5050612ee392500382610c18565b84526005612f03612ef383611522565b61189b60408601518651906115ab565b6040516020810191825260208152612f1a81610be0565b5190200660208501526032612f31612ef383611522565b6040516020810191825260208152612f4881610be0565b519020068060011c90600119169080820460021490151715610d7c57600581029080820460051490151715610d7c5780604086015260011c600581029080820460051490151715610d7c57606085015260408401516032810190818111610d7c5760608601510160328101809211610d7c57604b01809111610d7c576080850152610120820151816001019081600111610d7c57600691612fe891610da8565b06613426575b50506130096020613000835151613665565b92510151613665565b61301660408401516136d9565b906032613021610de5565b90600a602283015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561305857600a9091613029565b505061306760608601516136d9565b90601993613073610de5565b94600a602287015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530480156130aa57600a909161307b565b505060405197602a6130ed8a60208101997f3c7061746820643d224d000000000000000000000000000000000000000000008b5260208151948593019101610cfd565b890194600b60fa1b9586602a820152613110825180936020602b85019101610cfd565b01613125825180936020602b85019101610cfd565b01601160f91b602b8201527f207374796c653d227374726f6b652d6461736861727261793a20000000000000602c82015261316a825180936020604685019101610cfd565b01836046820152613185825180936020604785019101610cfd565b018260478201526131a0825180936020604885019101610cfd565b019060488201526131bb825180936020604985019101610cfd565b0192613203605582603b60f81b968760498201527f202d2d6f66667365743a20000000000000000000000000000000000000000000604a820152036035810184520182610c18565b61321060808401516136d9565b9183519360208101519360058510156117f057613278966115ee9661324960ff8860f860c29a60051c603201549160031b161c166136d9565b92613264608061325c60a08801516136d9565b9601516136d9565b956040519a8b9851809260208b0190610cfd565b870161328d8251809360208085019101610cfd565b018260208201527f207374726f6b653a20000000000000000000000000000000000000000000000060218201526132ce825180936020602a85019101610cfd565b0190602a8201527f207374726f6b652d77696474683a20302e000000000000000000000000000000602b82015261330f825180936020603c85019101610cfd565b01602560f81b603c8201527f3b2220706174684c656e6774683d220000000000000000000000000000000000603d820152613354825180936020604c85019101610cfd565b0161111f60f11b604c8201527f3c616e696d617465206174747269627574654e616d653d227374726f6b652d64604e8201527f6173686f6666736574222076616c7565733d22303b0000000000000000000000606e8201526133c0825180936020608385019101610cfd565b0161011160f51b60838201527f6475723d223473222063616c634d6f64653d226c696e6561722220726570656160858201527f74436f756e743d22696e646566696e69746522202f3e3c2f706174683e00000060a58201520360a2810184520182610c18565b61344b61344460808601519361014061010082015191015190611766565b9180610dd2565b6001019081600111610d7c57600f9161346391610da8565b06600a0180600a11610d7c5761347891610dd2565b60a08301523880612fee565b600591925093929302016000526020600020906000915b8183106134b5575050906020612ee3928201013880612ed5565b602091935080600191548385880101520191019091839261349b565b91505060209250612ee394915060ff191682840152151560051b8201013880612ed5565b634e487b7160e01b84526022600452602484fd5b93607f1693612eac565b61352082859793976117df565b5151916020918261353189886117df565b5101519060c7198086139081613659575b8161364f575b5080613644575b1561363357600b60fa1b9493929190156135eb576135786135726135d995613665565b91613665565b9060405195836135918895518092888089019101610cfd565b8401604d60f81b868201528251906135b182602195898785019101610cfd565b01918201526135ca825180936022968785019101610cfd565b01036002810184520182610c18565b936135e56000916119a0565b90612ddd565b6135fa6135726135d995613665565b9060405195836136138895518092888089019101610cfd565b8401601360fa1b868201528251906135b182602195898785019101610cfd565b5050959150506135e56001916119a0565b50611068821261354f565b9050821338613548565b61106887129150613542565b6115ee60206136a560008412936000856000146136c4575060405161368981610be0565b60018152602d60f81b84820152945b6000906136be57506136d9565b9260405193816112b28693518092868087019101610cfd565b036136d9565b604051906136d182610bfc565b815294613698565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008082101561380e575b506d04ee2d6d415b85acef8100000000808310156137ff575b50662386f26fc10000808310156137f0575b506305f5e100808310156137e1575b50612710808310156137d2575b5060648210156137c2575b600a809210156137b8575b600190816021613770828701610dff565b95860101905b613782575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049182156137b357919082613776565b61377b565b916001019161375f565b9190606460029104910191613754565b60049193920491019138613749565b6008919392049101913861373c565b6010919392049101913861372d565b6020919392049101913861371b565b60409350810491503861370256fea164736f6c6343000813000a";

type VeArtProxyConstructorParams =
  | [linkLibraryAddresses: VeArtProxyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeArtProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VeArtProxy__factory extends ContractFactory {
  constructor(...args: VeArtProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        VeArtProxy__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: VeArtProxyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f5dabb00d97932a7084857b7b479ed7ab3\\$__", "g"),
      linkLibraryAddresses["contracts/art/Trig.sol:Trig"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2af77e0425348cf2cf5810f3ba584fd810\\$__", "g"),
      linkLibraryAddresses["contracts/art/PerlinNoise.sol:PerlinNoise"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ve, overrides || {});
  }
  override deploy(
    _ve: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ve, overrides || {}) as Promise<
      VeArtProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VeArtProxy__factory {
    return super.connect(runner) as VeArtProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeArtProxyInterface {
    return new Interface(_abi) as VeArtProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VeArtProxy {
    return new Contract(address, _abi, runner) as unknown as VeArtProxy;
  }
}

export interface VeArtProxyLibraryAddresses {
  ["contracts/art/Trig.sol:Trig"]: string;
  ["contracts/art/PerlinNoise.sol:PerlinNoise"]: string;
}
