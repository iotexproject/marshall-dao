/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FactoryRegistry,
  FactoryRegistryInterface,
} from "../../../contracts/factories/FactoryRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fallbackPoolFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fallbackGaugeFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FallbackFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFactoriesToPoolFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "PathAlreadyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "PathNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "SameAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolFactory",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "gaugeFactory",
        type: "address",
      },
    ],
    name: "Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newRewardsFactory",
        type: "address",
      },
    ],
    name: "SetManagedRewardsFactory",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolFactory",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "gaugeFactory",
        type: "address",
      },
    ],
    name: "Unapprove",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "gaugeFactory",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolFactory",
        type: "address",
      },
    ],
    name: "factoriesToPoolFactory",
    outputs: [
      {
        internalType: "address",
        name: "gaugeFactory",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fallbackPoolFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolFactory",
        type: "address",
      },
    ],
    name: "isPoolFactoryApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFactories",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFactoriesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolFactory",
        type: "address",
      },
    ],
    name: "unapprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346101a657610a7990601f38839003908101601f19168201906001600160401b038211838310176101ab57808391604095869485528339810103126101a657610055602061004e836101e0565b92016101e0565b60008054336001600160a01b031980831682178455939592949293926001600160a01b039283929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a38060805216928315801561019c575b61018c5783855260036020528085205461017c57838552600460205280852092826100db6101c1565b945416809452831560001461014b57600080516020610a5983398151915293506101036101c1565b908388168252858752600460205283838820925116908254161790555b610129846101f4565b505194169280a36107c79081610292823960805181818160c2015261041f0152f35b5090918286160361016c5790600080516020610a5983398151915291610120565b51630358043160e01b8152600490fd5b516362cee17560e11b8152600490fd5b5163d92e233d60e01b8152600490fd5b50818616156100b2565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b038111838210176101ab57604052565b51906001600160a01b03821682036101a657565b60008181526003602052604081205461028c5760025468010000000000000000811015610278576001810180600255811015610264577f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0182905560025491815260036020526040902055600190565b634e487b7160e01b82526032600452602482fd5b634e487b7160e01b82526041600452602482fd5b90509056fe608060408181526004908136101561001657600080fd5b600092833560e01c90816306121cd5146104b5575080630cb299c9146104965780631217afdb1461044e57806356d9cb641461040a578063715018a6146103ad5780637e5465ba1461028a5780638da5cb5b14610262578063d1ea0a1d14610224578063f2fde38b146101615763fbf1f78a1461009257600080fd5b3461015d57602036600319011261015d576100ab61057d565b906100b4610598565b6001600160a01b03918216927f00000000000000000000000000000000000000000000000000000000000000008316841461014f578385526003602052818520541561014157610103846106d0565b5083855260205261011781852091516105f0565b5416907fb0a24d625a3d04a04108c98b7722db25e9435210d27050369082689178d4f1db8380a380f35b905163d38afd6560e01b8152fd5b9051630a235adf60e11b8152fd5b8280fd5b50903461015d57602036600319011261015d5761017c61057d565b90610185610598565b6001600160a01b039182169283156101d257505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b83823461025e57602036600319011261025e5760209181906001600160a01b0361024c61057d565b16815260038452205415159051908152f35b5080fd5b83823461025e578160031936011261025e57905490516001600160a01b039091168152602090f35b503461015d578060031936011261015d576102a361057d565b6001600160a01b036024358181169492908590036103a95781906102c5610598565b1692831580156103a1575b610392578386526003602052808620546103835783865282602052808620828251916102fb836105f0565b541680915280156000146103665750805192610316846105f0565b8584528487526020528520915182546001600160a01b03191691161790555b61033e81610653565b507f3ce2da1daf10aa0a28578b70fe768ed2f390a3da82445358f9346fbc2981f6fd8380a380f35b9091508403610376575050610335565b51630358043160e01b8152fd5b516362cee17560e11b81529050fd5b5163d92e233d60e01b81529050fd5b5084156102d0565b8580fd5b83346104075780600319360112610407576103c6610598565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b83823461025e578160031936011261025e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461015d57602036600319011261015d576020926001600160a01b03928291908461047861057d565b1682528552209181519261048b846105f0565b541680925251908152f35b83823461025e578160031936011261025e576020906002549051908152f35b905083913461015d578260031936011261015d576002549283835260209182840180956002845284842090845b868282106105695750505050849003601f01601f191684019567ffffffffffffffff871185881017610556575085815282865292518583018190528594938501939290915b82811061053657505050500390f35b83516001600160a01b031685528695509381019392810192600101610527565b634e487b7160e01b835260419052602482fd5b8354855290930192600192830192016104e2565b600435906001600160a01b038216820361059357565b600080fd5b6000546001600160a01b031633036105ac57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6020810190811067ffffffffffffffff82111761060c57604052565b634e487b7160e01b600052604160045260246000fd5b60025481101561063d57600260005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000818152600360205260408120546106cb57600254600160401b8110156106b75790826106a361068c84600160409601600255610622565b819391549060031b91821b91600019901b19161790565b905560025492815260036020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b60008181526003602052604081205490919080156107b557600019908082018181116107a1576002549083820191821161078d57808203610759575b50505060025480156107455781019061072482610622565b909182549160031b1b19169055600255815260036020526040812055600190565b634e487b7160e01b84526031600452602484fd5b61077761076861068c93610622565b90549060031b1c928392610622565b905584526003602052604084205538808061070c565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b50509056fea164736f6c6343000813000a3ce2da1daf10aa0a28578b70fe768ed2f390a3da82445358f9346fbc2981f6fd";

type FactoryRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactoryRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FactoryRegistry__factory extends ContractFactory {
  constructor(...args: FactoryRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fallbackPoolFactory: AddressLike,
    _fallbackGaugeFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _fallbackPoolFactory,
      _fallbackGaugeFactory,
      overrides || {}
    );
  }
  override deploy(
    _fallbackPoolFactory: AddressLike,
    _fallbackGaugeFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _fallbackPoolFactory,
      _fallbackGaugeFactory,
      overrides || {}
    ) as Promise<
      FactoryRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FactoryRegistry__factory {
    return super.connect(runner) as FactoryRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryRegistryInterface {
    return new Interface(_abi) as FactoryRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FactoryRegistry {
    return new Contract(address, _abi, runner) as unknown as FactoryRegistry;
  }
}
